<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="693.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="5056"><g><title>[libc.so.6] (36 samples, 0.71%)</title><rect x="0.0000%" y="613" width="0.7120%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="36"/><text x="0.2500%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="0.7120%" y="613" width="0.0593%" height="15" fill="rgb(217,0,24)" fg:x="36" fg:w="3"/><text x="0.9620%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="0.7318%" y="597" width="0.0396%" height="15" fill="rgb(221,193,54)" fg:x="37" fg:w="2"/><text x="0.9818%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.04%)</title><rect x="0.7318%" y="581" width="0.0396%" height="15" fill="rgb(248,212,6)" fg:x="37" fg:w="2"/><text x="0.9818%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.04%)</title><rect x="0.7318%" y="565" width="0.0396%" height="15" fill="rgb(208,68,35)" fg:x="37" fg:w="2"/><text x="0.9818%" y="575.50"></text></g><g><title>[[heap]] (40 samples, 0.79%)</title><rect x="0.0000%" y="629" width="0.7911%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="40"/><text x="0.2500%" y="639.50"></text></g><g><title>chess::eval::eval (1 samples, 0.02%)</title><rect x="0.7714%" y="613" width="0.0198%" height="15" fill="rgb(207,160,47)" fg:x="39" fg:w="1"/><text x="1.0214%" y="623.50"></text></g><g><title>[libc.so.6] (26 samples, 0.51%)</title><rect x="0.7911%" y="613" width="0.5142%" height="15" fill="rgb(228,23,34)" fg:x="40" fg:w="26"/><text x="1.0411%" y="623.50"></text></g><g><title>__rdl_realloc (8 samples, 0.16%)</title><rect x="1.3054%" y="613" width="0.1582%" height="15" fill="rgb(218,30,26)" fg:x="66" fg:w="8"/><text x="1.5554%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.22%)</title><rect x="1.4636%" y="613" width="0.2176%" height="15" fill="rgb(220,122,19)" fg:x="74" fg:w="11"/><text x="1.7136%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.10%)</title><rect x="1.5823%" y="597" width="0.0989%" height="15" fill="rgb(250,228,42)" fg:x="80" fg:w="5"/><text x="1.8323%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.08%)</title><rect x="1.6021%" y="581" width="0.0791%" height="15" fill="rgb(240,193,28)" fg:x="81" fg:w="4"/><text x="1.8521%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.08%)</title><rect x="1.6021%" y="565" width="0.0791%" height="15" fill="rgb(216,20,37)" fg:x="81" fg:w="4"/><text x="1.8521%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.49%)</title><rect x="1.6812%" y="613" width="0.4945%" height="15" fill="rgb(206,188,39)" fg:x="85" fg:w="25"/><text x="1.9312%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.38%)</title><rect x="1.7998%" y="597" width="0.3758%" height="15" fill="rgb(217,207,13)" fg:x="91" fg:w="19"/><text x="2.0498%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (13 samples, 0.26%)</title><rect x="1.9185%" y="581" width="0.2571%" height="15" fill="rgb(231,73,38)" fg:x="97" fg:w="13"/><text x="2.1685%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (13 samples, 0.26%)</title><rect x="1.9185%" y="565" width="0.2571%" height="15" fill="rgb(225,20,46)" fg:x="97" fg:w="13"/><text x="2.1685%" y="575.50"></text></g><g><title>chess::attack_gen::attack_gen (3 samples, 0.06%)</title><rect x="2.1756%" y="613" width="0.0593%" height="15" fill="rgb(210,31,41)" fg:x="110" fg:w="3"/><text x="2.4256%" y="623.50"></text></g><g><title>chess::make_move::make_move (1 samples, 0.02%)</title><rect x="2.2350%" y="613" width="0.0198%" height="15" fill="rgb(221,200,47)" fg:x="113" fg:w="1"/><text x="2.4850%" y="623.50"></text></g><g><title>chess::move_gen::direction_sliding (11 samples, 0.22%)</title><rect x="2.2547%" y="613" width="0.2176%" height="15" fill="rgb(226,26,5)" fg:x="114" fg:w="11"/><text x="2.5047%" y="623.50"></text></g><g><title>chess::move_gen::king_moves (1 samples, 0.02%)</title><rect x="2.4723%" y="613" width="0.0198%" height="15" fill="rgb(249,33,26)" fg:x="125" fg:w="1"/><text x="2.7223%" y="623.50"></text></g><g><title>chess::move_gen::knight_moves (1 samples, 0.02%)</title><rect x="2.4921%" y="613" width="0.0198%" height="15" fill="rgb(235,183,28)" fg:x="126" fg:w="1"/><text x="2.7421%" y="623.50"></text></g><g><title>chess::move_gen::pawn_moves (3 samples, 0.06%)</title><rect x="2.5119%" y="613" width="0.0593%" height="15" fill="rgb(221,5,38)" fg:x="127" fg:w="3"/><text x="2.7619%" y="623.50"></text></g><g><title>chess::piece::PieceList::add (4 samples, 0.08%)</title><rect x="2.5712%" y="613" width="0.0791%" height="15" fill="rgb(247,18,42)" fg:x="130" fg:w="4"/><text x="2.8212%" y="623.50"></text></g><g><title>chess::piece::PieceList::diference (4 samples, 0.08%)</title><rect x="2.6503%" y="613" width="0.0791%" height="15" fill="rgb(241,131,45)" fg:x="134" fg:w="4"/><text x="2.9003%" y="623.50"></text></g><g><title>free (7 samples, 0.14%)</title><rect x="2.7294%" y="613" width="0.1384%" height="15" fill="rgb(249,31,29)" fg:x="138" fg:w="7"/><text x="2.9794%" y="623.50"></text></g><g><title>[[stack]] (131 samples, 2.59%)</title><rect x="0.7911%" y="629" width="2.5910%" height="15" fill="rgb(225,111,53)" fg:x="40" fg:w="131"/><text x="1.0411%" y="639.50">[[..</text></g><g><title>realloc (26 samples, 0.51%)</title><rect x="2.8679%" y="613" width="0.5142%" height="15" fill="rgb(238,160,17)" fg:x="145" fg:w="26"/><text x="3.1179%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.14%)</title><rect x="3.3821%" y="629" width="0.1384%" height="15" fill="rgb(214,148,48)" fg:x="171" fg:w="7"/><text x="3.6321%" y="639.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.04%)</title><rect x="3.4810%" y="613" width="0.0396%" height="15" fill="rgb(232,36,49)" fg:x="176" fg:w="2"/><text x="3.7310%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.04%)</title><rect x="3.4810%" y="597" width="0.0396%" height="15" fill="rgb(209,103,24)" fg:x="176" fg:w="2"/><text x="3.7310%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.04%)</title><rect x="3.4810%" y="581" width="0.0396%" height="15" fill="rgb(229,88,8)" fg:x="176" fg:w="2"/><text x="3.7310%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="3.5008%" y="565" width="0.0198%" height="15" fill="rgb(213,181,19)" fg:x="177" fg:w="1"/><text x="3.7508%" y="575.50"></text></g><g><title>[libc.so.6] (21 samples, 0.42%)</title><rect x="3.5206%" y="629" width="0.4153%" height="15" fill="rgb(254,191,54)" fg:x="178" fg:w="21"/><text x="3.7706%" y="639.50"></text></g><g><title>[prueba] (3 samples, 0.06%)</title><rect x="3.9359%" y="629" width="0.0593%" height="15" fill="rgb(241,83,37)" fg:x="199" fg:w="3"/><text x="4.1859%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="3.9359%" y="613" width="0.0593%" height="15" fill="rgb(233,36,39)" fg:x="199" fg:w="3"/><text x="4.1859%" y="623.50"></text></g><g><title>[libc.so.6] (112 samples, 2.22%)</title><rect x="3.9953%" y="613" width="2.2152%" height="15" fill="rgb(226,3,54)" fg:x="202" fg:w="112"/><text x="4.2453%" y="623.50">[..</text></g><g><title>[prueba] (11 samples, 0.22%)</title><rect x="6.2104%" y="613" width="0.2176%" height="15" fill="rgb(245,192,40)" fg:x="314" fg:w="11"/><text x="6.4604%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.22%)</title><rect x="6.2104%" y="597" width="0.2176%" height="15" fill="rgb(238,167,29)" fg:x="314" fg:w="11"/><text x="6.4604%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.16%)</title><rect x="6.4280%" y="613" width="0.1582%" height="15" fill="rgb(232,182,51)" fg:x="325" fg:w="8"/><text x="6.6780%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.28%)</title><rect x="6.5862%" y="613" width="0.2769%" height="15" fill="rgb(231,60,39)" fg:x="333" fg:w="14"/><text x="6.8362%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.08%)</title><rect x="6.7840%" y="597" width="0.0791%" height="15" fill="rgb(208,69,12)" fg:x="343" fg:w="4"/><text x="7.0340%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.08%)</title><rect x="6.7840%" y="581" width="0.0791%" height="15" fill="rgb(235,93,37)" fg:x="343" fg:w="4"/><text x="7.0340%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.08%)</title><rect x="6.7840%" y="565" width="0.0791%" height="15" fill="rgb(213,116,39)" fg:x="343" fg:w="4"/><text x="7.0340%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.81%)</title><rect x="6.8631%" y="613" width="0.8109%" height="15" fill="rgb(222,207,29)" fg:x="347" fg:w="41"/><text x="7.1131%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.12%)</title><rect x="7.5554%" y="597" width="0.1187%" height="15" fill="rgb(206,96,30)" fg:x="382" fg:w="6"/><text x="7.8054%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.12%)</title><rect x="7.5554%" y="581" width="0.1187%" height="15" fill="rgb(218,138,4)" fg:x="382" fg:w="6"/><text x="7.8054%" y="591.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.12%)</title><rect x="7.5554%" y="565" width="0.1187%" height="15" fill="rgb(250,191,14)" fg:x="382" fg:w="6"/><text x="7.8054%" y="575.50"></text></g><g><title>chess::alpha_beta_search::alpha_beta_max_with_memory (10 samples, 0.20%)</title><rect x="7.6741%" y="613" width="0.1978%" height="15" fill="rgb(239,60,40)" fg:x="388" fg:w="10"/><text x="7.9241%" y="623.50"></text></g><g><title>chess::alpha_beta_search::alpha_beta_min_with_memory (1 samples, 0.02%)</title><rect x="7.8521%" y="597" width="0.0198%" height="15" fill="rgb(206,27,48)" fg:x="397" fg:w="1"/><text x="8.1021%" y="607.50"></text></g><g><title>chess::attack_gen::attack_gen (14 samples, 0.28%)</title><rect x="7.8718%" y="613" width="0.2769%" height="15" fill="rgb(225,35,8)" fg:x="398" fg:w="14"/><text x="8.1218%" y="623.50"></text></g><g><title>chess::eval::eval (4 samples, 0.08%)</title><rect x="8.1487%" y="613" width="0.0791%" height="15" fill="rgb(250,213,24)" fg:x="412" fg:w="4"/><text x="8.3987%" y="623.50"></text></g><g><title>chess::make_move::aux (7 samples, 0.14%)</title><rect x="8.2278%" y="613" width="0.1384%" height="15" fill="rgb(247,123,22)" fg:x="416" fg:w="7"/><text x="8.4778%" y="623.50"></text></g><g><title>chess::make_move::aux (2 samples, 0.04%)</title><rect x="8.3267%" y="597" width="0.0396%" height="15" fill="rgb(231,138,38)" fg:x="421" fg:w="2"/><text x="8.5767%" y="607.50"></text></g><g><title>chess::move_gen::direction_sliding (14 samples, 0.28%)</title><rect x="8.3663%" y="613" width="0.2769%" height="15" fill="rgb(231,145,46)" fg:x="423" fg:w="14"/><text x="8.6163%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.20%)</title><rect x="8.4454%" y="597" width="0.1978%" height="15" fill="rgb(251,118,11)" fg:x="427" fg:w="10"/><text x="8.6954%" y="607.50"></text></g><g><title>chess::move_gen::king_moves (3 samples, 0.06%)</title><rect x="8.6432%" y="613" width="0.0593%" height="15" fill="rgb(217,147,25)" fg:x="437" fg:w="3"/><text x="8.8932%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="8.6630%" y="597" width="0.0396%" height="15" fill="rgb(247,81,37)" fg:x="438" fg:w="2"/><text x="8.9130%" y="607.50"></text></g><g><title>chess::move_gen::knight_moves (2 samples, 0.04%)</title><rect x="8.7025%" y="613" width="0.0396%" height="15" fill="rgb(209,12,38)" fg:x="440" fg:w="2"/><text x="8.9525%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.08%)</title><rect x="9.2168%" y="565" width="0.0791%" height="15" fill="rgb(227,1,9)" fg:x="466" fg:w="4"/><text x="9.4668%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.08%)</title><rect x="9.2168%" y="549" width="0.0791%" height="15" fill="rgb(248,47,43)" fg:x="466" fg:w="4"/><text x="9.4668%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (5 samples, 0.10%)</title><rect x="9.2168%" y="597" width="0.0989%" height="15" fill="rgb(221,10,30)" fg:x="466" fg:w="5"/><text x="9.4668%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.10%)</title><rect x="9.2168%" y="581" width="0.0989%" height="15" fill="rgb(210,229,1)" fg:x="466" fg:w="5"/><text x="9.4668%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="9.2959%" y="565" width="0.0198%" height="15" fill="rgb(222,148,37)" fg:x="470" fg:w="1"/><text x="9.5459%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (2 samples, 0.04%)</title><rect x="9.3354%" y="581" width="0.0396%" height="15" fill="rgb(234,67,33)" fg:x="472" fg:w="2"/><text x="9.5854%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="9.3354%" y="565" width="0.0396%" height="15" fill="rgb(247,98,35)" fg:x="472" fg:w="2"/><text x="9.5854%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="9.3354%" y="549" width="0.0396%" height="15" fill="rgb(247,138,52)" fg:x="472" fg:w="2"/><text x="9.5854%" y="559.50"></text></g><g><title>chess::move_gen::move_gen (33 samples, 0.65%)</title><rect x="8.7421%" y="613" width="0.6527%" height="15" fill="rgb(213,79,30)" fg:x="442" fg:w="33"/><text x="8.9921%" y="623.50"></text></g><g><title>chess::move_gen::get_pinned_pieces (4 samples, 0.08%)</title><rect x="9.3157%" y="597" width="0.0791%" height="15" fill="rgb(246,177,23)" fg:x="471" fg:w="4"/><text x="9.5657%" y="607.50"></text></g><g><title>chess::move_gen::get_line (1 samples, 0.02%)</title><rect x="9.3750%" y="581" width="0.0198%" height="15" fill="rgb(230,62,27)" fg:x="474" fg:w="1"/><text x="9.6250%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="9.3750%" y="565" width="0.0198%" height="15" fill="rgb(216,154,8)" fg:x="474" fg:w="1"/><text x="9.6250%" y="575.50"></text></g><g><title>chess::move_gen::pawn_moves (4 samples, 0.08%)</title><rect x="9.3948%" y="613" width="0.0791%" height="15" fill="rgb(244,35,45)" fg:x="475" fg:w="4"/><text x="9.6448%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="9.4343%" y="597" width="0.0396%" height="15" fill="rgb(251,115,12)" fg:x="477" fg:w="2"/><text x="9.6843%" y="607.50"></text></g><g><title>chess::piece::PieceList::add (3 samples, 0.06%)</title><rect x="9.4739%" y="613" width="0.0593%" height="15" fill="rgb(240,54,50)" fg:x="479" fg:w="3"/><text x="9.7239%" y="623.50"></text></g><g><title>chess::piece::PieceList::add_piece (1 samples, 0.02%)</title><rect x="9.5332%" y="613" width="0.0198%" height="15" fill="rgb(233,84,52)" fg:x="482" fg:w="1"/><text x="9.7832%" y="623.50"></text></g><g><title>chess::unmake::unmake_move (6 samples, 0.12%)</title><rect x="9.5530%" y="613" width="0.1187%" height="15" fill="rgb(207,117,47)" fg:x="483" fg:w="6"/><text x="9.8030%" y="623.50"></text></g><g><title>chess::zobrist_hashing::HashingNumbers::hash_move (3 samples, 0.06%)</title><rect x="9.6717%" y="613" width="0.0593%" height="15" fill="rgb(249,43,39)" fg:x="489" fg:w="3"/><text x="9.9217%" y="623.50"></text></g><g><title>free (16 samples, 0.32%)</title><rect x="9.7310%" y="613" width="0.3165%" height="15" fill="rgb(209,38,44)" fg:x="492" fg:w="16"/><text x="9.9810%" y="623.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="10.0475%" y="613" width="0.0198%" height="15" fill="rgb(236,212,23)" fg:x="508" fg:w="1"/><text x="10.2975%" y="623.50"></text></g><g><title>[unknown] (309 samples, 6.11%)</title><rect x="3.9953%" y="629" width="6.1116%" height="15" fill="rgb(242,79,21)" fg:x="202" fg:w="309"/><text x="4.2453%" y="639.50">[unknown]</text></g><g><title>realloc (2 samples, 0.04%)</title><rect x="10.0672%" y="613" width="0.0396%" height="15" fill="rgb(211,96,35)" fg:x="509" fg:w="2"/><text x="10.3172%" y="623.50"></text></g><g><title>__rdl_realloc (9 samples, 0.18%)</title><rect x="10.1068%" y="629" width="0.1780%" height="15" fill="rgb(253,215,40)" fg:x="511" fg:w="9"/><text x="10.3568%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (9 samples, 0.18%)</title><rect x="10.1068%" y="613" width="0.1780%" height="15" fill="rgb(211,81,21)" fg:x="511" fg:w="9"/><text x="10.3568%" y="623.50"></text></g><g><title>&lt;chess::game::GameInfo as core::clone::Clone&gt;::clone (204 samples, 4.03%)</title><rect x="10.2848%" y="341" width="4.0348%" height="15" fill="rgb(208,190,38)" fg:x="520" fg:w="204"/><text x="10.5348%" y="351.50">&lt;che..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (204 samples, 4.03%)</title><rect x="10.2848%" y="325" width="4.0348%" height="15" fill="rgb(235,213,38)" fg:x="520" fg:w="204"/><text x="10.5348%" y="335.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (204 samples, 4.03%)</title><rect x="10.2848%" y="309" width="4.0348%" height="15" fill="rgb(237,122,38)" fg:x="520" fg:w="204"/><text x="10.5348%" y="319.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (204 samples, 4.03%)</title><rect x="10.2848%" y="293" width="4.0348%" height="15" fill="rgb(244,218,35)" fg:x="520" fg:w="204"/><text x="10.5348%" y="303.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (204 samples, 4.03%)</title><rect x="10.2848%" y="277" width="4.0348%" height="15" fill="rgb(240,68,47)" fg:x="520" fg:w="204"/><text x="10.5348%" y="287.50">&lt;T a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (204 samples, 4.03%)</title><rect x="10.2848%" y="261" width="4.0348%" height="15" fill="rgb(210,16,53)" fg:x="520" fg:w="204"/><text x="10.5348%" y="271.50">core..</text></g><g><title>core::intrinsics::copy_nonoverlapping (204 samples, 4.03%)</title><rect x="10.2848%" y="245" width="4.0348%" height="15" fill="rgb(235,124,12)" fg:x="520" fg:w="204"/><text x="10.5348%" y="255.50">core..</text></g><g><title>[libc.so.6] (204 samples, 4.03%)</title><rect x="10.2848%" y="229" width="4.0348%" height="15" fill="rgb(224,169,11)" fg:x="520" fg:w="204"/><text x="10.5348%" y="239.50">[lib..</text></g><g><title>chess::alpha_beta_search::alpha_beta_max_with_memory (6 samples, 0.12%)</title><rect x="14.3394%" y="293" width="0.1187%" height="15" fill="rgb(250,166,2)" fg:x="725" fg:w="6"/><text x="14.5894%" y="303.50"></text></g><g><title>free (5 samples, 0.10%)</title><rect x="14.3592%" y="277" width="0.0989%" height="15" fill="rgb(242,216,29)" fg:x="726" fg:w="5"/><text x="14.6092%" y="287.50"></text></g><g><title>[libc.so.6] (5 samples, 0.10%)</title><rect x="14.3592%" y="261" width="0.0989%" height="15" fill="rgb(230,116,27)" fg:x="726" fg:w="5"/><text x="14.6092%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="14.4185%" y="245" width="0.0396%" height="15" fill="rgb(228,99,48)" fg:x="729" fg:w="2"/><text x="14.6685%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="14.7745%" y="277" width="0.0198%" height="15" fill="rgb(253,11,6)" fg:x="747" fg:w="1"/><text x="15.0245%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="14.7745%" y="261" width="0.0198%" height="15" fill="rgb(247,143,39)" fg:x="747" fg:w="1"/><text x="15.0245%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="14.7745%" y="245" width="0.0198%" height="15" fill="rgb(236,97,10)" fg:x="747" fg:w="1"/><text x="15.0245%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.7943%" y="277" width="0.0198%" height="15" fill="rgb(233,208,19)" fg:x="748" fg:w="1"/><text x="15.0443%" y="287.50"></text></g><g><title>chess::alpha_beta_search::alpha_beta_max_with_memory (8 samples, 0.16%)</title><rect x="14.8141%" y="277" width="0.1582%" height="15" fill="rgb(216,164,2)" fg:x="749" fg:w="8"/><text x="15.0641%" y="287.50"></text></g><g><title>&lt;chess::game::Color as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="15.1899%" y="261" width="0.0198%" height="15" fill="rgb(220,129,5)" fg:x="768" fg:w="1"/><text x="15.4399%" y="271.50"></text></g><g><title>chess::attack_gen::attack_gen (42 samples, 0.83%)</title><rect x="15.6250%" y="245" width="0.8307%" height="15" fill="rgb(242,17,10)" fg:x="790" fg:w="42"/><text x="15.8750%" y="255.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.08%)</title><rect x="19.8378%" y="229" width="0.0791%" height="15" fill="rgb(242,107,0)" fg:x="1003" fg:w="4"/><text x="20.0878%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="19.8972%" y="213" width="0.0198%" height="15" fill="rgb(251,28,31)" fg:x="1006" fg:w="1"/><text x="20.1472%" y="223.50"></text></g><g><title>chess::attack_gen::attack_gen (1 samples, 0.02%)</title><rect x="19.8972%" y="197" width="0.0198%" height="15" fill="rgb(233,223,10)" fg:x="1006" fg:w="1"/><text x="20.1472%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="19.9169%" y="229" width="0.0989%" height="15" fill="rgb(215,21,27)" fg:x="1007" fg:w="5"/><text x="20.1669%" y="239.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&lt;&amp;i8&gt;&gt;::add (5 samples, 0.10%)</title><rect x="20.0158%" y="229" width="0.0989%" height="15" fill="rgb(232,23,21)" fg:x="1012" fg:w="5"/><text x="20.2658%" y="239.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&gt;::add (5 samples, 0.10%)</title><rect x="20.0158%" y="213" width="0.0989%" height="15" fill="rgb(244,5,23)" fg:x="1012" fg:w="5"/><text x="20.2658%" y="223.50"></text></g><g><title>chess::attack_gen::direction_sliding (186 samples, 3.68%)</title><rect x="16.4557%" y="245" width="3.6788%" height="15" fill="rgb(226,81,46)" fg:x="832" fg:w="186"/><text x="16.7057%" y="255.50">ches..</text></g><g><title>&lt;i8 as core::ops::arith::AddAssign&lt;&amp;i8&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="20.1147%" y="229" width="0.0198%" height="15" fill="rgb(247,70,30)" fg:x="1017" fg:w="1"/><text x="20.3647%" y="239.50"></text></g><g><title>&lt;i8 as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.02%)</title><rect x="20.1147%" y="213" width="0.0198%" height="15" fill="rgb(212,68,19)" fg:x="1017" fg:w="1"/><text x="20.3647%" y="223.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.04%)</title><rect x="20.8663%" y="229" width="0.0396%" height="15" fill="rgb(240,187,13)" fg:x="1055" fg:w="2"/><text x="21.1163%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.36%)</title><rect x="20.9059%" y="229" width="0.3560%" height="15" fill="rgb(223,113,26)" fg:x="1057" fg:w="18"/><text x="21.1559%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="21.1630%" y="213" width="0.0989%" height="15" fill="rgb(206,192,2)" fg:x="1070" fg:w="5"/><text x="21.4130%" y="223.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&lt;&amp;i8&gt;&gt;::add (8 samples, 0.16%)</title><rect x="21.2619%" y="229" width="0.1582%" height="15" fill="rgb(241,108,4)" fg:x="1075" fg:w="8"/><text x="21.5119%" y="239.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&gt;::add (8 samples, 0.16%)</title><rect x="21.2619%" y="213" width="0.1582%" height="15" fill="rgb(247,173,49)" fg:x="1075" fg:w="8"/><text x="21.5119%" y="223.50"></text></g><g><title>chess::attack_gen::king_moves (70 samples, 1.38%)</title><rect x="20.1345%" y="245" width="1.3845%" height="15" fill="rgb(224,114,35)" fg:x="1018" fg:w="70"/><text x="20.3845%" y="255.50"></text></g><g><title>chess::attack_gen::attack_gen (5 samples, 0.10%)</title><rect x="21.4201%" y="229" width="0.0989%" height="15" fill="rgb(245,159,27)" fg:x="1083" fg:w="5"/><text x="21.6701%" y="239.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.06%)</title><rect x="21.5190%" y="229" width="0.0593%" height="15" fill="rgb(245,172,44)" fg:x="1088" fg:w="3"/><text x="21.7690%" y="239.50"></text></g><g><title>chess::attack_gen::knight_moves (5 samples, 0.10%)</title><rect x="21.5190%" y="245" width="0.0989%" height="15" fill="rgb(236,23,11)" fg:x="1088" fg:w="5"/><text x="21.7690%" y="255.50"></text></g><g><title>chess::attack_gen::attack_gen (2 samples, 0.04%)</title><rect x="21.5783%" y="229" width="0.0396%" height="15" fill="rgb(205,117,38)" fg:x="1091" fg:w="2"/><text x="21.8283%" y="239.50"></text></g><g><title>chess::attack_gen::attack_gen (374 samples, 7.40%)</title><rect x="15.2097%" y="261" width="7.3972%" height="15" fill="rgb(237,72,25)" fg:x="769" fg:w="374"/><text x="15.4597%" y="271.50">chess::att..</text></g><g><title>chess::attack_gen::pawn_moves (50 samples, 0.99%)</title><rect x="21.6179%" y="245" width="0.9889%" height="15" fill="rgb(244,70,9)" fg:x="1093" fg:w="50"/><text x="21.8679%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.08%)</title><rect x="22.5277%" y="229" width="0.0791%" height="15" fill="rgb(217,125,39)" fg:x="1139" fg:w="4"/><text x="22.7777%" y="239.50"></text></g><g><title>chess::eval::center_control_eval (22 samples, 0.44%)</title><rect x="22.6068%" y="261" width="0.4351%" height="15" fill="rgb(235,36,10)" fg:x="1143" fg:w="22"/><text x="22.8568%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="22.9430%" y="245" width="0.0989%" height="15" fill="rgb(251,123,47)" fg:x="1160" fg:w="5"/><text x="23.1930%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="22.9430%" y="229" width="0.0989%" height="15" fill="rgb(221,13,13)" fg:x="1160" fg:w="5"/><text x="23.1930%" y="239.50"></text></g><g><title>chess::eval::material_eval (4 samples, 0.08%)</title><rect x="23.0419%" y="261" width="0.0791%" height="15" fill="rgb(238,131,9)" fg:x="1165" fg:w="4"/><text x="23.2919%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.08%)</title><rect x="23.7935%" y="245" width="0.0791%" height="15" fill="rgb(211,50,8)" fg:x="1203" fg:w="4"/><text x="24.0435%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.06%)</title><rect x="23.8133%" y="229" width="0.0593%" height="15" fill="rgb(245,182,24)" fg:x="1204" fg:w="3"/><text x="24.0633%" y="239.50"></text></g><g><title>[libc.so.6] (32 samples, 0.63%)</title><rect x="23.8726%" y="245" width="0.6329%" height="15" fill="rgb(242,14,37)" fg:x="1207" fg:w="32"/><text x="24.1226%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.08%)</title><rect x="24.7231%" y="181" width="0.0791%" height="15" fill="rgb(246,228,12)" fg:x="1250" fg:w="4"/><text x="24.9731%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.04%)</title><rect x="24.7627%" y="165" width="0.0396%" height="15" fill="rgb(213,55,15)" fg:x="1252" fg:w="2"/><text x="25.0127%" y="175.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.24%)</title><rect x="24.9209%" y="149" width="0.2373%" height="15" fill="rgb(209,9,3)" fg:x="1260" fg:w="12"/><text x="25.1709%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.12%)</title><rect x="25.1582%" y="149" width="0.1187%" height="15" fill="rgb(230,59,30)" fg:x="1272" fg:w="6"/><text x="25.4082%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="25.2571%" y="133" width="0.0198%" height="15" fill="rgb(209,121,21)" fg:x="1277" fg:w="1"/><text x="25.5071%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="25.2571%" y="117" width="0.0198%" height="15" fill="rgb(220,109,13)" fg:x="1277" fg:w="1"/><text x="25.5071%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="25.2571%" y="101" width="0.0198%" height="15" fill="rgb(232,18,1)" fg:x="1277" fg:w="1"/><text x="25.5071%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.10%)</title><rect x="25.2769%" y="149" width="0.0989%" height="15" fill="rgb(215,41,42)" fg:x="1278" fg:w="5"/><text x="25.5269%" y="159.50"></text></g><g><title>__rdl_realloc (8 samples, 0.16%)</title><rect x="25.5934%" y="85" width="0.1582%" height="15" fill="rgb(224,123,36)" fg:x="1294" fg:w="8"/><text x="25.8434%" y="95.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (7 samples, 0.14%)</title><rect x="25.6131%" y="69" width="0.1384%" height="15" fill="rgb(240,125,3)" fg:x="1295" fg:w="7"/><text x="25.8631%" y="79.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="25.7516%" y="85" width="0.0198%" height="15" fill="rgb(205,98,50)" fg:x="1302" fg:w="1"/><text x="26.0016%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (405 samples, 8.01%)</title><rect x="25.5340%" y="133" width="8.0103%" height="15" fill="rgb(205,185,37)" fg:x="1291" fg:w="405"/><text x="25.7840%" y="143.50">&lt;alloc::all..</text></g><g><title>alloc::alloc::Global::grow_impl (405 samples, 8.01%)</title><rect x="25.5340%" y="117" width="8.0103%" height="15" fill="rgb(238,207,15)" fg:x="1291" fg:w="405"/><text x="25.7840%" y="127.50">alloc::allo..</text></g><g><title>alloc::alloc::realloc (403 samples, 7.97%)</title><rect x="25.5736%" y="101" width="7.9707%" height="15" fill="rgb(213,199,42)" fg:x="1293" fg:w="403"/><text x="25.8236%" y="111.50">alloc::allo..</text></g><g><title>realloc (393 samples, 7.77%)</title><rect x="25.7714%" y="85" width="7.7729%" height="15" fill="rgb(235,201,11)" fg:x="1303" fg:w="393"/><text x="26.0214%" y="95.50">realloc</text></g><g><title>[libc.so.6] (352 samples, 6.96%)</title><rect x="26.5823%" y="69" width="6.9620%" height="15" fill="rgb(207,46,11)" fg:x="1344" fg:w="352"/><text x="26.8323%" y="79.50">[libc.so...</text></g><g><title>[libc.so.6] (314 samples, 6.21%)</title><rect x="27.3339%" y="53" width="6.2104%" height="15" fill="rgb(241,35,35)" fg:x="1382" fg:w="314"/><text x="27.5839%" y="63.50">[libc.so..</text></g><g><title>[libc.so.6] (14 samples, 0.28%)</title><rect x="33.2674%" y="37" width="0.2769%" height="15" fill="rgb(243,32,47)" fg:x="1682" fg:w="14"/><text x="33.5174%" y="47.50"></text></g><g><title>__rdl_alloc (3 samples, 0.06%)</title><rect x="33.5443%" y="133" width="0.0593%" height="15" fill="rgb(247,202,23)" fg:x="1696" fg:w="3"/><text x="33.7943%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.06%)</title><rect x="33.5443%" y="117" width="0.0593%" height="15" fill="rgb(219,102,11)" fg:x="1696" fg:w="3"/><text x="33.7943%" y="127.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.16%)</title><rect x="33.6036%" y="133" width="0.1582%" height="15" fill="rgb(243,110,44)" fg:x="1699" fg:w="8"/><text x="33.8536%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (440 samples, 8.70%)</title><rect x="25.3758%" y="149" width="8.7025%" height="15" fill="rgb(222,74,54)" fg:x="1283" fg:w="440"/><text x="25.6258%" y="159.50">alloc::raw_v..</text></g><g><title>malloc (16 samples, 0.32%)</title><rect x="33.7619%" y="133" width="0.3165%" height="15" fill="rgb(216,99,12)" fg:x="1707" fg:w="16"/><text x="34.0119%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.22%)</title><rect x="34.0783%" y="149" width="0.2176%" height="15" fill="rgb(226,22,26)" fg:x="1723" fg:w="11"/><text x="34.3283%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (11 samples, 0.22%)</title><rect x="34.0783%" y="133" width="0.2176%" height="15" fill="rgb(217,163,10)" fg:x="1723" fg:w="11"/><text x="34.3283%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (11 samples, 0.22%)</title><rect x="34.0783%" y="117" width="0.2176%" height="15" fill="rgb(213,25,53)" fg:x="1723" fg:w="11"/><text x="34.3283%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.16%)</title><rect x="34.2959%" y="117" width="0.1582%" height="15" fill="rgb(252,105,26)" fg:x="1734" fg:w="8"/><text x="34.5459%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (501 samples, 9.91%)</title><rect x="24.5649%" y="213" width="9.9090%" height="15" fill="rgb(220,39,43)" fg:x="1242" fg:w="501"/><text x="24.8149%" y="223.50">alloc::vec::Ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (501 samples, 9.91%)</title><rect x="24.5649%" y="197" width="9.9090%" height="15" fill="rgb(229,68,48)" fg:x="1242" fg:w="501"/><text x="24.8149%" y="207.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (489 samples, 9.67%)</title><rect x="24.8022%" y="181" width="9.6717%" height="15" fill="rgb(252,8,32)" fg:x="1254" fg:w="489"/><text x="25.0522%" y="191.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (489 samples, 9.67%)</title><rect x="24.8022%" y="165" width="9.6717%" height="15" fill="rgb(223,20,43)" fg:x="1254" fg:w="489"/><text x="25.0522%" y="175.50">alloc::raw_vec..</text></g><g><title>core::cmp::max (9 samples, 0.18%)</title><rect x="34.2959%" y="149" width="0.1780%" height="15" fill="rgb(229,81,49)" fg:x="1734" fg:w="9"/><text x="34.5459%" y="159.50"></text></g><g><title>core::cmp::Ord::max (9 samples, 0.18%)</title><rect x="34.2959%" y="133" width="0.1780%" height="15" fill="rgb(236,28,36)" fg:x="1734" fg:w="9"/><text x="34.5459%" y="143.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="34.4541%" y="117" width="0.0198%" height="15" fill="rgb(249,185,26)" fg:x="1742" fg:w="1"/><text x="34.7041%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (594 samples, 11.75%)</title><rect x="24.5055%" y="229" width="11.7484%" height="15" fill="rgb(249,174,33)" fg:x="1239" fg:w="594"/><text x="24.7555%" y="239.50">alloc::vec::Vec&lt;T..</text></g><g><title>core::intrinsics::copy_nonoverlapping (90 samples, 1.78%)</title><rect x="34.4739%" y="213" width="1.7801%" height="15" fill="rgb(233,201,37)" fg:x="1743" fg:w="90"/><text x="34.7239%" y="223.50">c..</text></g><g><title>[libc.so.6] (71 samples, 1.40%)</title><rect x="34.8497%" y="197" width="1.4043%" height="15" fill="rgb(221,78,26)" fg:x="1762" fg:w="71"/><text x="35.0997%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2 samples, 0.04%)</title><rect x="36.2540%" y="229" width="0.0396%" height="15" fill="rgb(250,127,30)" fg:x="1833" fg:w="2"/><text x="36.5040%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="36.2540%" y="213" width="0.0396%" height="15" fill="rgb(230,49,44)" fg:x="1833" fg:w="2"/><text x="36.5040%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="36.2737%" y="197" width="0.0198%" height="15" fill="rgb(229,67,23)" fg:x="1834" fg:w="1"/><text x="36.5237%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (597 samples, 11.81%)</title><rect x="24.5055%" y="245" width="11.8078%" height="15" fill="rgb(249,83,47)" fg:x="1239" fg:w="597"/><text x="24.7555%" y="255.50">alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="36.2935%" y="229" width="0.0198%" height="15" fill="rgb(215,43,3)" fg:x="1835" fg:w="1"/><text x="36.5435%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (9 samples, 0.18%)</title><rect x="36.3133%" y="245" width="0.1780%" height="15" fill="rgb(238,154,13)" fg:x="1836" fg:w="9"/><text x="36.5633%" y="255.50"></text></g><g><title>chess::attack_gen::attack_gen (43 samples, 0.85%)</title><rect x="37.2231%" y="229" width="0.8505%" height="15" fill="rgb(219,56,2)" fg:x="1882" fg:w="43"/><text x="37.4731%" y="239.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.08%)</title><rect x="41.6139%" y="213" width="0.0791%" height="15" fill="rgb(233,0,4)" fg:x="2104" fg:w="4"/><text x="41.8639%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.10%)</title><rect x="41.6930%" y="213" width="0.0989%" height="15" fill="rgb(235,30,7)" fg:x="2108" fg:w="5"/><text x="41.9430%" y="223.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&lt;&amp;i8&gt;&gt;::add (4 samples, 0.08%)</title><rect x="41.7919%" y="213" width="0.0791%" height="15" fill="rgb(250,79,13)" fg:x="2113" fg:w="4"/><text x="42.0419%" y="223.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&gt;::add (4 samples, 0.08%)</title><rect x="41.7919%" y="197" width="0.0791%" height="15" fill="rgb(211,146,34)" fg:x="2113" fg:w="4"/><text x="42.0419%" y="207.50"></text></g><g><title>chess::attack_gen::direction_sliding (195 samples, 3.86%)</title><rect x="38.0736%" y="229" width="3.8568%" height="15" fill="rgb(228,22,38)" fg:x="1925" fg:w="195"/><text x="38.3236%" y="239.50">ches..</text></g><g><title>&lt;i8 as core::ops::arith::AddAssign&lt;&amp;i8&gt;&gt;::add_assign (3 samples, 0.06%)</title><rect x="41.8710%" y="213" width="0.0593%" height="15" fill="rgb(235,168,5)" fg:x="2117" fg:w="3"/><text x="42.1210%" y="223.50"></text></g><g><title>&lt;i8 as core::ops::arith::AddAssign&gt;::add_assign (3 samples, 0.06%)</title><rect x="41.8710%" y="197" width="0.0593%" height="15" fill="rgb(221,155,16)" fg:x="2117" fg:w="3"/><text x="42.1210%" y="207.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="42.6028%" y="213" width="0.0198%" height="15" fill="rgb(215,215,53)" fg:x="2154" fg:w="1"/><text x="42.8528%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="42.6028%" y="197" width="0.0198%" height="15" fill="rgb(223,4,10)" fg:x="2154" fg:w="1"/><text x="42.8528%" y="207.50"></text></g><g><title>chess::attack_gen::attack_gen (1 samples, 0.02%)</title><rect x="42.6028%" y="181" width="0.0198%" height="15" fill="rgb(234,103,6)" fg:x="2154" fg:w="1"/><text x="42.8528%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.32%)</title><rect x="42.6226%" y="213" width="0.3165%" height="15" fill="rgb(227,97,0)" fg:x="2155" fg:w="16"/><text x="42.8726%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.08%)</title><rect x="42.8600%" y="197" width="0.0791%" height="15" fill="rgb(234,150,53)" fg:x="2167" fg:w="4"/><text x="43.1100%" y="207.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&lt;&amp;i8&gt;&gt;::add (2 samples, 0.04%)</title><rect x="42.9391%" y="213" width="0.0396%" height="15" fill="rgb(228,201,54)" fg:x="2171" fg:w="2"/><text x="43.1891%" y="223.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&gt;::add (2 samples, 0.04%)</title><rect x="42.9391%" y="197" width="0.0396%" height="15" fill="rgb(222,22,37)" fg:x="2171" fg:w="2"/><text x="43.1891%" y="207.50"></text></g><g><title>chess::attack_gen::king_moves (65 samples, 1.29%)</title><rect x="41.9304%" y="229" width="1.2856%" height="15" fill="rgb(237,53,32)" fg:x="2120" fg:w="65"/><text x="42.1804%" y="239.50"></text></g><g><title>chess::attack_gen::attack_gen (12 samples, 0.24%)</title><rect x="42.9786%" y="213" width="0.2373%" height="15" fill="rgb(233,25,53)" fg:x="2173" fg:w="12"/><text x="43.2286%" y="223.50"></text></g><g><title>chess::attack_gen::knight_moves (26 samples, 0.51%)</title><rect x="43.2160%" y="229" width="0.5142%" height="15" fill="rgb(210,40,34)" fg:x="2185" fg:w="26"/><text x="43.4660%" y="239.50"></text></g><g><title>chess::attack_gen::attack_gen (3 samples, 0.06%)</title><rect x="43.6709%" y="213" width="0.0593%" height="15" fill="rgb(241,220,44)" fg:x="2208" fg:w="3"/><text x="43.9209%" y="223.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="44.3434%" y="213" width="0.0198%" height="15" fill="rgb(235,28,35)" fg:x="2242" fg:w="1"/><text x="44.5934%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="44.3631%" y="213" width="0.0396%" height="15" fill="rgb(210,56,17)" fg:x="2243" fg:w="2"/><text x="44.6131%" y="223.50"></text></g><g><title>chess::attack_gen::pawn_moves (36 samples, 0.71%)</title><rect x="43.7302%" y="229" width="0.7120%" height="15" fill="rgb(224,130,29)" fg:x="2211" fg:w="36"/><text x="43.9802%" y="239.50"></text></g><g><title>chess::attack_gen::attack_gen (2 samples, 0.04%)</title><rect x="44.4027%" y="213" width="0.0396%" height="15" fill="rgb(235,212,8)" fg:x="2245" fg:w="2"/><text x="44.6527%" y="223.50"></text></g><g><title>chess::attack_gen::attack_gen (404 samples, 7.99%)</title><rect x="36.4913%" y="245" width="7.9905%" height="15" fill="rgb(223,33,50)" fg:x="1845" fg:w="404"/><text x="36.7413%" y="255.50">chess::atta..</text></g><g><title>core::slice::&lt;impl [T]&gt;::last (2 samples, 0.04%)</title><rect x="44.4422%" y="229" width="0.0396%" height="15" fill="rgb(219,149,13)" fg:x="2247" fg:w="2"/><text x="44.6922%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.44%)</title><rect x="50.9494%" y="229" width="0.4351%" height="15" fill="rgb(250,156,29)" fg:x="2576" fg:w="22"/><text x="51.1994%" y="239.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (4 samples, 0.08%)</title><rect x="51.3054%" y="213" width="0.0791%" height="15" fill="rgb(216,193,19)" fg:x="2594" fg:w="4"/><text x="51.5554%" y="223.50"></text></g><g><title>chess::move_gen::direction_sliding (4 samples, 0.08%)</title><rect x="51.3054%" y="197" width="0.0791%" height="15" fill="rgb(216,135,14)" fg:x="2594" fg:w="4"/><text x="51.5554%" y="207.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&lt;&amp;i8&gt;&gt;::add (12 samples, 0.24%)</title><rect x="51.3845%" y="229" width="0.2373%" height="15" fill="rgb(241,47,5)" fg:x="2598" fg:w="12"/><text x="51.6345%" y="239.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&gt;::add (12 samples, 0.24%)</title><rect x="51.3845%" y="213" width="0.2373%" height="15" fill="rgb(233,42,35)" fg:x="2598" fg:w="12"/><text x="51.6345%" y="223.50"></text></g><g><title>&lt;i8 as core::ops::arith::AddAssign&lt;&amp;i8&gt;&gt;::add_assign (10 samples, 0.20%)</title><rect x="51.6218%" y="229" width="0.1978%" height="15" fill="rgb(231,13,6)" fg:x="2610" fg:w="10"/><text x="51.8718%" y="239.50"></text></g><g><title>&lt;i8 as core::ops::arith::AddAssign&gt;::add_assign (10 samples, 0.20%)</title><rect x="51.6218%" y="213" width="0.1978%" height="15" fill="rgb(207,181,40)" fg:x="2610" fg:w="10"/><text x="51.8718%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.40%)</title><rect x="52.3339%" y="181" width="0.3956%" height="15" fill="rgb(254,173,49)" fg:x="2646" fg:w="20"/><text x="52.5839%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (7 samples, 0.14%)</title><rect x="52.7294%" y="181" width="0.1384%" height="15" fill="rgb(221,1,38)" fg:x="2666" fg:w="7"/><text x="52.9794%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.06%)</title><rect x="52.8085%" y="165" width="0.0593%" height="15" fill="rgb(206,124,46)" fg:x="2670" fg:w="3"/><text x="53.0585%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3 samples, 0.06%)</title><rect x="52.8085%" y="149" width="0.0593%" height="15" fill="rgb(249,21,11)" fg:x="2670" fg:w="3"/><text x="53.0585%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (3 samples, 0.06%)</title><rect x="52.8085%" y="133" width="0.0593%" height="15" fill="rgb(222,201,40)" fg:x="2670" fg:w="3"/><text x="53.0585%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.20%)</title><rect x="52.8679%" y="181" width="0.1978%" height="15" fill="rgb(235,61,29)" fg:x="2673" fg:w="10"/><text x="53.1179%" y="191.50"></text></g><g><title>__rdl_realloc (13 samples, 0.26%)</title><rect x="53.7777%" y="117" width="0.2571%" height="15" fill="rgb(219,207,3)" fg:x="2719" fg:w="13"/><text x="54.0277%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (9 samples, 0.18%)</title><rect x="53.8568%" y="101" width="0.1780%" height="15" fill="rgb(222,56,46)" fg:x="2723" fg:w="9"/><text x="54.1068%" y="111.50"></text></g><g><title>__rust_realloc (5 samples, 0.10%)</title><rect x="54.0348%" y="117" width="0.0989%" height="15" fill="rgb(239,76,54)" fg:x="2732" fg:w="5"/><text x="54.2848%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (299 samples, 5.91%)</title><rect x="53.7381%" y="165" width="5.9138%" height="15" fill="rgb(231,124,27)" fg:x="2717" fg:w="299"/><text x="53.9881%" y="175.50">&lt;alloc::..</text></g><g><title>alloc::alloc::Global::grow_impl (299 samples, 5.91%)</title><rect x="53.7381%" y="149" width="5.9138%" height="15" fill="rgb(249,195,6)" fg:x="2717" fg:w="299"/><text x="53.9881%" y="159.50">alloc::a..</text></g><g><title>alloc::alloc::realloc (298 samples, 5.89%)</title><rect x="53.7579%" y="133" width="5.8940%" height="15" fill="rgb(237,174,47)" fg:x="2718" fg:w="298"/><text x="54.0079%" y="143.50">alloc::..</text></g><g><title>realloc (279 samples, 5.52%)</title><rect x="54.1337%" y="117" width="5.5182%" height="15" fill="rgb(206,201,31)" fg:x="2737" fg:w="279"/><text x="54.3837%" y="127.50">realloc</text></g><g><title>[libc.so.6] (229 samples, 4.53%)</title><rect x="55.1226%" y="101" width="4.5293%" height="15" fill="rgb(231,57,52)" fg:x="2787" fg:w="229"/><text x="55.3726%" y="111.50">[libc..</text></g><g><title>[libc.so.6] (172 samples, 3.40%)</title><rect x="56.2500%" y="85" width="3.4019%" height="15" fill="rgb(248,177,22)" fg:x="2844" fg:w="172"/><text x="56.5000%" y="95.50">[li..</text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="59.6123%" y="69" width="0.0396%" height="15" fill="rgb(215,211,37)" fg:x="3014" fg:w="2"/><text x="59.8623%" y="79.50"></text></g><g><title>__rdl_alloc (5 samples, 0.10%)</title><rect x="59.6519%" y="165" width="0.0989%" height="15" fill="rgb(241,128,51)" fg:x="3016" fg:w="5"/><text x="59.9019%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.10%)</title><rect x="59.6519%" y="149" width="0.0989%" height="15" fill="rgb(227,165,31)" fg:x="3016" fg:w="5"/><text x="59.9019%" y="159.50"></text></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect x="59.7508%" y="165" width="0.0593%" height="15" fill="rgb(228,167,24)" fg:x="3021" fg:w="3"/><text x="60.0008%" y="175.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.08%)</title><rect x="59.8101%" y="165" width="0.0791%" height="15" fill="rgb(228,143,12)" fg:x="3024" fg:w="4"/><text x="60.0601%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (388 samples, 7.67%)</title><rect x="53.0657%" y="181" width="7.6741%" height="15" fill="rgb(249,149,8)" fg:x="2683" fg:w="388"/><text x="53.3157%" y="191.50">alloc::raw_..</text></g><g><title>malloc (43 samples, 0.85%)</title><rect x="59.8892%" y="165" width="0.8505%" height="15" fill="rgb(243,35,44)" fg:x="3028" fg:w="43"/><text x="60.1392%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.32%)</title><rect x="60.7397%" y="181" width="0.3165%" height="15" fill="rgb(246,89,9)" fg:x="3071" fg:w="16"/><text x="60.9897%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (11 samples, 0.22%)</title><rect x="60.8386%" y="165" width="0.2176%" height="15" fill="rgb(233,213,13)" fg:x="3076" fg:w="11"/><text x="61.0886%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (11 samples, 0.22%)</title><rect x="60.8386%" y="149" width="0.2176%" height="15" fill="rgb(233,141,41)" fg:x="3076" fg:w="11"/><text x="61.0886%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.24%)</title><rect x="61.0562%" y="149" width="0.2373%" height="15" fill="rgb(239,167,4)" fg:x="3087" fg:w="12"/><text x="61.3062%" y="159.50"></text></g><g><title>core::cmp::max (15 samples, 0.30%)</title><rect x="61.0562%" y="181" width="0.2967%" height="15" fill="rgb(209,217,16)" fg:x="3087" fg:w="15"/><text x="61.3062%" y="191.50"></text></g><g><title>core::cmp::Ord::max (15 samples, 0.30%)</title><rect x="61.0562%" y="165" width="0.2967%" height="15" fill="rgb(219,88,35)" fg:x="3087" fg:w="15"/><text x="61.3062%" y="175.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.06%)</title><rect x="61.2935%" y="149" width="0.0593%" height="15" fill="rgb(220,193,23)" fg:x="3099" fg:w="3"/><text x="61.5435%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (463 samples, 9.16%)</title><rect x="52.2350%" y="197" width="9.1574%" height="15" fill="rgb(230,90,52)" fg:x="2641" fg:w="463"/><text x="52.4850%" y="207.50">alloc::raw_ve..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.04%)</title><rect x="61.3528%" y="181" width="0.0396%" height="15" fill="rgb(252,106,19)" fg:x="3102" fg:w="2"/><text x="61.6028%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.04%)</title><rect x="61.3528%" y="165" width="0.0396%" height="15" fill="rgb(206,74,20)" fg:x="3102" fg:w="2"/><text x="61.6028%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (465 samples, 9.20%)</title><rect x="52.2350%" y="213" width="9.1970%" height="15" fill="rgb(230,138,44)" fg:x="2641" fg:w="465"/><text x="52.4850%" y="223.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="61.3924%" y="197" width="0.0396%" height="15" fill="rgb(235,182,43)" fg:x="3104" fg:w="2"/><text x="61.6424%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (7 samples, 0.14%)</title><rect x="61.4320%" y="213" width="0.1384%" height="15" fill="rgb(242,16,51)" fg:x="3106" fg:w="7"/><text x="61.6820%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.20%)</title><rect x="61.5704%" y="213" width="0.1978%" height="15" fill="rgb(248,9,4)" fg:x="3113" fg:w="10"/><text x="61.8204%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.20%)</title><rect x="61.5704%" y="197" width="0.1978%" height="15" fill="rgb(210,31,22)" fg:x="3113" fg:w="10"/><text x="61.8204%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (556 samples, 11.00%)</title><rect x="51.8196%" y="229" width="10.9968%" height="15" fill="rgb(239,54,39)" fg:x="2620" fg:w="556"/><text x="52.0696%" y="239.50">alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::write (53 samples, 1.05%)</title><rect x="61.7682%" y="213" width="1.0483%" height="15" fill="rgb(230,99,41)" fg:x="3123" fg:w="53"/><text x="62.0182%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (6 samples, 0.12%)</title><rect x="62.8165%" y="229" width="0.1187%" height="15" fill="rgb(253,106,12)" fg:x="3176" fg:w="6"/><text x="63.0665%" y="239.50"></text></g><g><title>chess::move_gen::direction_sliding (2 samples, 0.04%)</title><rect x="62.9351%" y="229" width="0.0396%" height="15" fill="rgb(213,46,41)" fg:x="3182" fg:w="2"/><text x="63.1851%" y="239.50"></text></g><g><title>chess::move_gen::direction_sliding (1 samples, 0.02%)</title><rect x="62.9747%" y="197" width="0.0198%" height="15" fill="rgb(215,133,35)" fg:x="3184" fg:w="1"/><text x="63.2247%" y="207.50"></text></g><g><title>&lt;i8 as core::slice::cmp::SliceContains&gt;::slice_contains (7 samples, 0.14%)</title><rect x="62.9747%" y="213" width="0.1384%" height="15" fill="rgb(213,28,5)" fg:x="3184" fg:w="7"/><text x="63.2247%" y="223.50"></text></g><g><title>core::slice::memchr::memchr (6 samples, 0.12%)</title><rect x="62.9945%" y="197" width="0.1187%" height="15" fill="rgb(215,77,49)" fg:x="3185" fg:w="6"/><text x="63.2445%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (6 samples, 0.12%)</title><rect x="62.9945%" y="181" width="0.1187%" height="15" fill="rgb(248,100,22)" fg:x="3185" fg:w="6"/><text x="63.2445%" y="191.50"></text></g><g><title>core::slice::memchr::memchr::{{closure}} (4 samples, 0.08%)</title><rect x="63.0340%" y="165" width="0.0791%" height="15" fill="rgb(208,67,9)" fg:x="3187" fg:w="4"/><text x="63.2840%" y="175.50"></text></g><g><title>chess::move_gen::direction_sliding (943 samples, 18.65%)</title><rect x="44.4818%" y="245" width="18.6511%" height="15" fill="rgb(219,133,21)" fg:x="2249" fg:w="943"/><text x="44.7318%" y="255.50">chess::move_gen::direction_sl..</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (8 samples, 0.16%)</title><rect x="62.9747%" y="229" width="0.1582%" height="15" fill="rgb(246,46,29)" fg:x="3184" fg:w="8"/><text x="63.2247%" y="239.50"></text></g><g><title>chess::move_gen::direction_sliding (1 samples, 0.02%)</title><rect x="63.1131%" y="213" width="0.0198%" height="15" fill="rgb(246,185,52)" fg:x="3191" fg:w="1"/><text x="63.3631%" y="223.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.04%)</title><rect x="63.1329%" y="229" width="0.0396%" height="15" fill="rgb(252,136,11)" fg:x="3192" fg:w="2"/><text x="63.3829%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="63.1329%" y="213" width="0.0396%" height="15" fill="rgb(219,138,53)" fg:x="3192" fg:w="2"/><text x="63.3829%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="63.1329%" y="197" width="0.0396%" height="15" fill="rgb(211,51,23)" fg:x="3192" fg:w="2"/><text x="63.3829%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="63.1329%" y="181" width="0.0396%" height="15" fill="rgb(247,221,28)" fg:x="3192" fg:w="2"/><text x="63.3829%" y="191.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="63.1527%" y="165" width="0.0198%" height="15" fill="rgb(251,222,45)" fg:x="3193" fg:w="1"/><text x="63.4027%" y="175.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="63.1725%" y="181" width="0.0198%" height="15" fill="rgb(217,162,53)" fg:x="3194" fg:w="1"/><text x="63.4225%" y="191.50"></text></g><g><title>chess::move_gen::get_line (4 samples, 0.08%)</title><rect x="63.1329%" y="245" width="0.0791%" height="15" fill="rgb(229,93,14)" fg:x="3192" fg:w="4"/><text x="63.3829%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="63.1725%" y="229" width="0.0396%" height="15" fill="rgb(209,67,49)" fg:x="3194" fg:w="2"/><text x="63.4225%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="63.1725%" y="213" width="0.0396%" height="15" fill="rgb(213,87,29)" fg:x="3194" fg:w="2"/><text x="63.4225%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="63.1725%" y="197" width="0.0396%" height="15" fill="rgb(205,151,52)" fg:x="3194" fg:w="2"/><text x="63.4225%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="63.1922%" y="181" width="0.0198%" height="15" fill="rgb(253,215,39)" fg:x="3195" fg:w="1"/><text x="63.4422%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="63.1922%" y="165" width="0.0198%" height="15" fill="rgb(221,220,41)" fg:x="3195" fg:w="1"/><text x="63.4422%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="63.1922%" y="149" width="0.0198%" height="15" fill="rgb(218,133,21)" fg:x="3195" fg:w="1"/><text x="63.4422%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="63.1922%" y="133" width="0.0198%" height="15" fill="rgb(221,193,43)" fg:x="3195" fg:w="1"/><text x="63.4422%" y="143.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="63.1922%" y="117" width="0.0198%" height="15" fill="rgb(240,128,52)" fg:x="3195" fg:w="1"/><text x="63.4422%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.32%)</title><rect x="64.6559%" y="229" width="0.3165%" height="15" fill="rgb(253,114,12)" fg:x="3269" fg:w="16"/><text x="64.9059%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="64.9525%" y="213" width="0.0198%" height="15" fill="rgb(215,223,47)" fg:x="3284" fg:w="1"/><text x="65.2025%" y="223.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&lt;&amp;i8&gt;&gt;::add (4 samples, 0.08%)</title><rect x="64.9723%" y="229" width="0.0791%" height="15" fill="rgb(248,225,23)" fg:x="3285" fg:w="4"/><text x="65.2223%" y="239.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&gt;::add (4 samples, 0.08%)</title><rect x="64.9723%" y="213" width="0.0791%" height="15" fill="rgb(250,108,0)" fg:x="3285" fg:w="4"/><text x="65.2223%" y="223.50"></text></g><g><title>[libc.so.6] (11 samples, 0.22%)</title><rect x="65.0514%" y="229" width="0.2176%" height="15" fill="rgb(228,208,7)" fg:x="3289" fg:w="11"/><text x="65.3014%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (1 samples, 0.02%)</title><rect x="65.2690%" y="229" width="0.0198%" height="15" fill="rgb(244,45,10)" fg:x="3300" fg:w="1"/><text x="65.5190%" y="239.50"></text></g><g><title>alloc::slice::hack::into_vec (1 samples, 0.02%)</title><rect x="65.2690%" y="213" width="0.0198%" height="15" fill="rgb(207,125,25)" fg:x="3300" fg:w="1"/><text x="65.5190%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (1 samples, 0.02%)</title><rect x="65.2690%" y="197" width="0.0198%" height="15" fill="rgb(210,195,18)" fg:x="3300" fg:w="1"/><text x="65.5190%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="65.2888%" y="197" width="0.0396%" height="15" fill="rgb(249,80,12)" fg:x="3301" fg:w="2"/><text x="65.5388%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="65.2888%" y="181" width="0.0396%" height="15" fill="rgb(221,65,9)" fg:x="3301" fg:w="2"/><text x="65.5388%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="65.3085%" y="165" width="0.0198%" height="15" fill="rgb(235,49,36)" fg:x="3302" fg:w="1"/><text x="65.5585%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="65.3085%" y="149" width="0.0198%" height="15" fill="rgb(225,32,20)" fg:x="3302" fg:w="1"/><text x="65.5585%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="65.3085%" y="133" width="0.0198%" height="15" fill="rgb(215,141,46)" fg:x="3302" fg:w="1"/><text x="65.5585%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.08%)</title><rect x="65.2888%" y="213" width="0.0791%" height="15" fill="rgb(250,160,47)" fg:x="3301" fg:w="4"/><text x="65.5388%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="65.3283%" y="197" width="0.0396%" height="15" fill="rgb(216,222,40)" fg:x="3303" fg:w="2"/><text x="65.5783%" y="207.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="65.3283%" y="181" width="0.0396%" height="15" fill="rgb(234,217,39)" fg:x="3303" fg:w="2"/><text x="65.5783%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (5 samples, 0.10%)</title><rect x="65.2888%" y="229" width="0.0989%" height="15" fill="rgb(207,178,40)" fg:x="3301" fg:w="5"/><text x="65.5388%" y="239.50"></text></g><g><title>chess::move_gen::move_gen (1 samples, 0.02%)</title><rect x="65.3679%" y="213" width="0.0198%" height="15" fill="rgb(221,136,13)" fg:x="3305" fg:w="1"/><text x="65.6179%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="65.3877%" y="229" width="0.0593%" height="15" fill="rgb(249,199,10)" fg:x="3306" fg:w="3"/><text x="65.6377%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="65.5063%" y="213" width="0.0198%" height="15" fill="rgb(249,222,13)" fg:x="3312" fg:w="1"/><text x="65.7563%" y="223.50"></text></g><g><title>chess::move_gen::direction_sliding (1 samples, 0.02%)</title><rect x="65.5261%" y="181" width="0.0198%" height="15" fill="rgb(244,185,38)" fg:x="3313" fg:w="1"/><text x="65.7761%" y="191.50"></text></g><g><title>chess::move_gen::direction_sliding (8 samples, 0.16%)</title><rect x="65.4470%" y="229" width="0.1582%" height="15" fill="rgb(236,202,9)" fg:x="3309" fg:w="8"/><text x="65.6970%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4 samples, 0.08%)</title><rect x="65.5261%" y="213" width="0.0791%" height="15" fill="rgb(250,229,37)" fg:x="3313" fg:w="4"/><text x="65.7761%" y="223.50"></text></g><g><title>&lt;i8 as core::slice::cmp::SliceContains&gt;::slice_contains (4 samples, 0.08%)</title><rect x="65.5261%" y="197" width="0.0791%" height="15" fill="rgb(206,174,23)" fg:x="3313" fg:w="4"/><text x="65.7761%" y="207.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.06%)</title><rect x="65.5459%" y="181" width="0.0593%" height="15" fill="rgb(211,33,43)" fg:x="3314" fg:w="3"/><text x="65.7959%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (3 samples, 0.06%)</title><rect x="65.5459%" y="165" width="0.0593%" height="15" fill="rgb(245,58,50)" fg:x="3314" fg:w="3"/><text x="65.7959%" y="175.50"></text></g><g><title>core::slice::memchr::memchr::{{closure}} (2 samples, 0.04%)</title><rect x="65.5657%" y="149" width="0.0396%" height="15" fill="rgb(244,68,36)" fg:x="3315" fg:w="2"/><text x="65.8157%" y="159.50"></text></g><g><title>chess::move_gen::get_direction (1 samples, 0.02%)</title><rect x="65.6052%" y="229" width="0.0198%" height="15" fill="rgb(232,229,15)" fg:x="3317" fg:w="1"/><text x="65.8552%" y="239.50"></text></g><g><title>core::num::&lt;impl i8&gt;::abs (1 samples, 0.02%)</title><rect x="65.6052%" y="213" width="0.0198%" height="15" fill="rgb(254,30,23)" fg:x="3317" fg:w="1"/><text x="65.8552%" y="223.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="65.6448%" y="149" width="0.0198%" height="15" fill="rgb(235,160,14)" fg:x="3319" fg:w="1"/><text x="65.8948%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="65.6448%" y="133" width="0.0198%" height="15" fill="rgb(212,155,44)" fg:x="3319" fg:w="1"/><text x="65.8948%" y="143.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.08%)</title><rect x="65.6448%" y="213" width="0.0791%" height="15" fill="rgb(226,2,50)" fg:x="3319" fg:w="4"/><text x="65.8948%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.08%)</title><rect x="65.6448%" y="197" width="0.0791%" height="15" fill="rgb(234,177,6)" fg:x="3319" fg:w="4"/><text x="65.8948%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.08%)</title><rect x="65.6448%" y="181" width="0.0791%" height="15" fill="rgb(217,24,9)" fg:x="3319" fg:w="4"/><text x="65.8948%" y="191.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.08%)</title><rect x="65.6448%" y="165" width="0.0791%" height="15" fill="rgb(220,13,46)" fg:x="3319" fg:w="4"/><text x="65.8948%" y="175.50"></text></g><g><title>malloc (3 samples, 0.06%)</title><rect x="65.6646%" y="149" width="0.0593%" height="15" fill="rgb(239,221,27)" fg:x="3320" fg:w="3"/><text x="65.9146%" y="159.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.08%)</title><rect x="65.7437%" y="165" width="0.0791%" height="15" fill="rgb(222,198,25)" fg:x="3324" fg:w="4"/><text x="65.9937%" y="175.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="65.8426%" y="101" width="0.0198%" height="15" fill="rgb(211,99,13)" fg:x="3329" fg:w="1"/><text x="66.0926%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.08%)</title><rect x="65.8426%" y="149" width="0.0791%" height="15" fill="rgb(232,111,31)" fg:x="3329" fg:w="4"/><text x="66.0926%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.08%)</title><rect x="65.8426%" y="133" width="0.0791%" height="15" fill="rgb(245,82,37)" fg:x="3329" fg:w="4"/><text x="66.0926%" y="143.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.08%)</title><rect x="65.8426%" y="117" width="0.0791%" height="15" fill="rgb(227,149,46)" fg:x="3329" fg:w="4"/><text x="66.0926%" y="127.50"></text></g><g><title>realloc (3 samples, 0.06%)</title><rect x="65.8623%" y="101" width="0.0593%" height="15" fill="rgb(218,36,50)" fg:x="3330" fg:w="3"/><text x="66.1123%" y="111.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="65.8821%" y="85" width="0.0396%" height="15" fill="rgb(226,80,48)" fg:x="3331" fg:w="2"/><text x="66.1321%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.20%)</title><rect x="65.7437%" y="197" width="0.1978%" height="15" fill="rgb(238,224,15)" fg:x="3324" fg:w="10"/><text x="65.9937%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.20%)</title><rect x="65.7437%" y="181" width="0.1978%" height="15" fill="rgb(241,136,10)" fg:x="3324" fg:w="10"/><text x="65.9937%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.12%)</title><rect x="65.8228%" y="165" width="0.1187%" height="15" fill="rgb(208,32,45)" fg:x="3328" fg:w="6"/><text x="66.0728%" y="175.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="65.9217%" y="149" width="0.0198%" height="15" fill="rgb(207,135,9)" fg:x="3333" fg:w="1"/><text x="66.1717%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="65.9415%" y="197" width="0.0198%" height="15" fill="rgb(206,86,44)" fg:x="3334" fg:w="1"/><text x="66.1915%" y="207.50"></text></g><g><title>chess::move_gen::get_line (19 samples, 0.38%)</title><rect x="65.6250%" y="229" width="0.3758%" height="15" fill="rgb(245,177,15)" fg:x="3318" fg:w="19"/><text x="65.8750%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.28%)</title><rect x="65.7239%" y="213" width="0.2769%" height="15" fill="rgb(206,64,50)" fg:x="3323" fg:w="14"/><text x="65.9739%" y="223.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="65.9612%" y="197" width="0.0396%" height="15" fill="rgb(234,36,40)" fg:x="3335" fg:w="2"/><text x="66.2112%" y="207.50"></text></g><g><title>chess::move_gen::move_gen (11 samples, 0.22%)</title><rect x="66.0008%" y="229" width="0.2176%" height="15" fill="rgb(213,64,8)" fg:x="3337" fg:w="11"/><text x="66.2508%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="66.2579%" y="165" width="0.0198%" height="15" fill="rgb(210,75,36)" fg:x="3350" fg:w="1"/><text x="66.5079%" y="175.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="66.2579%" y="149" width="0.0198%" height="15" fill="rgb(229,88,21)" fg:x="3350" fg:w="1"/><text x="66.5079%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="66.2579%" y="213" width="0.0396%" height="15" fill="rgb(252,204,47)" fg:x="3350" fg:w="2"/><text x="66.5079%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="66.2579%" y="197" width="0.0396%" height="15" fill="rgb(208,77,27)" fg:x="3350" fg:w="2"/><text x="66.5079%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="66.2579%" y="181" width="0.0396%" height="15" fill="rgb(221,76,26)" fg:x="3350" fg:w="2"/><text x="66.5079%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="66.2777%" y="165" width="0.0198%" height="15" fill="rgb(225,139,18)" fg:x="3351" fg:w="1"/><text x="66.5277%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="66.2777%" y="149" width="0.0198%" height="15" fill="rgb(230,137,11)" fg:x="3351" fg:w="1"/><text x="66.5277%" y="159.50"></text></g><g><title>chess::move_gen::pawn_moves (5 samples, 0.10%)</title><rect x="66.2184%" y="229" width="0.0989%" height="15" fill="rgb(212,28,1)" fg:x="3348" fg:w="5"/><text x="66.4684%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="66.2975%" y="213" width="0.0198%" height="15" fill="rgb(248,164,17)" fg:x="3352" fg:w="1"/><text x="66.5475%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="66.3370%" y="213" width="0.0198%" height="15" fill="rgb(222,171,42)" fg:x="3354" fg:w="1"/><text x="66.5870%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="66.3370%" y="197" width="0.0198%" height="15" fill="rgb(243,84,45)" fg:x="3354" fg:w="1"/><text x="66.5870%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="66.3370%" y="181" width="0.0198%" height="15" fill="rgb(252,49,23)" fg:x="3354" fg:w="1"/><text x="66.5870%" y="191.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="66.3370%" y="165" width="0.0198%" height="15" fill="rgb(215,19,7)" fg:x="3354" fg:w="1"/><text x="66.5870%" y="175.50"></text></g><g><title>chess::piece::PieceList::add_piece (5 samples, 0.10%)</title><rect x="66.3172%" y="229" width="0.0989%" height="15" fill="rgb(238,81,41)" fg:x="3353" fg:w="5"/><text x="66.5672%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="66.3568%" y="213" width="0.0593%" height="15" fill="rgb(210,199,37)" fg:x="3355" fg:w="3"/><text x="66.6068%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="66.3568%" y="197" width="0.0593%" height="15" fill="rgb(244,192,49)" fg:x="3355" fg:w="3"/><text x="66.6068%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="66.3568%" y="181" width="0.0593%" height="15" fill="rgb(226,211,11)" fg:x="3355" fg:w="3"/><text x="66.6068%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="66.3568%" y="165" width="0.0593%" height="15" fill="rgb(236,162,54)" fg:x="3355" fg:w="3"/><text x="66.6068%" y="175.50"></text></g><g><title>malloc (3 samples, 0.06%)</title><rect x="66.3568%" y="149" width="0.0593%" height="15" fill="rgb(220,229,9)" fg:x="3355" fg:w="3"/><text x="66.6068%" y="159.50"></text></g><g><title>chess::piece::PieceList::new (5 samples, 0.10%)</title><rect x="66.4161%" y="229" width="0.0989%" height="15" fill="rgb(250,87,22)" fg:x="3358" fg:w="5"/><text x="66.6661%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="66.4557%" y="213" width="0.0593%" height="15" fill="rgb(239,43,17)" fg:x="3360" fg:w="3"/><text x="66.7057%" y="223.50"></text></g><g><title>chess::piece::PieceType::is_sliding (2 samples, 0.04%)</title><rect x="66.5150%" y="229" width="0.0396%" height="15" fill="rgb(231,177,25)" fg:x="3363" fg:w="2"/><text x="66.7650%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="66.5546%" y="229" width="0.0198%" height="15" fill="rgb(219,179,1)" fg:x="3365" fg:w="1"/><text x="66.8046%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chess::move_gen::Move&gt;&gt; (1 samples, 0.02%)</title><rect x="66.5744%" y="229" width="0.0198%" height="15" fill="rgb(238,219,53)" fg:x="3366" fg:w="1"/><text x="66.8244%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chess::move_gen::Move&gt;&gt; (1 samples, 0.02%)</title><rect x="66.5744%" y="213" width="0.0198%" height="15" fill="rgb(232,167,36)" fg:x="3366" fg:w="1"/><text x="66.8244%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="66.5744%" y="197" width="0.0198%" height="15" fill="rgb(244,19,51)" fg:x="3366" fg:w="1"/><text x="66.8244%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="66.5744%" y="181" width="0.0198%" height="15" fill="rgb(224,6,22)" fg:x="3366" fg:w="1"/><text x="66.8244%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="66.5744%" y="165" width="0.0198%" height="15" fill="rgb(224,145,5)" fg:x="3366" fg:w="1"/><text x="66.8244%" y="175.50"></text></g><g><title>free (1 samples, 0.02%)</title><rect x="66.5744%" y="149" width="0.0198%" height="15" fill="rgb(234,130,49)" fg:x="3366" fg:w="1"/><text x="66.8244%" y="159.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="66.5941%" y="149" width="0.0198%" height="15" fill="rgb(254,6,2)" fg:x="3367" fg:w="1"/><text x="66.8441%" y="159.50"></text></g><g><title>chess::move_gen::get_pinned_pieces (176 samples, 3.48%)</title><rect x="63.2120%" y="245" width="3.4810%" height="15" fill="rgb(208,96,46)" fg:x="3196" fg:w="176"/><text x="63.4620%" y="255.50">che..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i8&gt;&gt; (5 samples, 0.10%)</title><rect x="66.5941%" y="229" width="0.0989%" height="15" fill="rgb(239,3,39)" fg:x="3367" fg:w="5"/><text x="66.8441%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i8&gt;&gt; (5 samples, 0.10%)</title><rect x="66.5941%" y="213" width="0.0989%" height="15" fill="rgb(233,210,1)" fg:x="3367" fg:w="5"/><text x="66.8441%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="66.5941%" y="197" width="0.0989%" height="15" fill="rgb(244,137,37)" fg:x="3367" fg:w="5"/><text x="66.8441%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.10%)</title><rect x="66.5941%" y="181" width="0.0989%" height="15" fill="rgb(240,136,2)" fg:x="3367" fg:w="5"/><text x="66.8441%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.10%)</title><rect x="66.5941%" y="165" width="0.0989%" height="15" fill="rgb(239,18,37)" fg:x="3367" fg:w="5"/><text x="66.8441%" y="175.50"></text></g><g><title>free (4 samples, 0.08%)</title><rect x="66.6139%" y="149" width="0.0791%" height="15" fill="rgb(218,185,22)" fg:x="3368" fg:w="4"/><text x="66.8639%" y="159.50"></text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="66.6337%" y="133" width="0.0593%" height="15" fill="rgb(225,218,4)" fg:x="3369" fg:w="3"/><text x="66.8837%" y="143.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="68.3347%" y="229" width="0.0198%" height="15" fill="rgb(230,182,32)" fg:x="3455" fg:w="1"/><text x="68.5847%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.40%)</title><rect x="68.3544%" y="229" width="0.3956%" height="15" fill="rgb(242,56,43)" fg:x="3456" fg:w="20"/><text x="68.6044%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.16%)</title><rect x="68.5918%" y="213" width="0.1582%" height="15" fill="rgb(233,99,24)" fg:x="3468" fg:w="8"/><text x="68.8418%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="68.7500%" y="229" width="0.0593%" height="15" fill="rgb(234,209,42)" fg:x="3476" fg:w="3"/><text x="69.0000%" y="239.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.04%)</title><rect x="68.7698%" y="213" width="0.0396%" height="15" fill="rgb(227,7,12)" fg:x="3477" fg:w="2"/><text x="69.0198%" y="223.50"></text></g><g><title>chess::move_gen::king_moves (2 samples, 0.04%)</title><rect x="68.7698%" y="197" width="0.0396%" height="15" fill="rgb(245,203,43)" fg:x="3477" fg:w="2"/><text x="69.0198%" y="207.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&lt;&amp;i8&gt;&gt;::add (2 samples, 0.04%)</title><rect x="68.8093%" y="229" width="0.0396%" height="15" fill="rgb(238,205,33)" fg:x="3479" fg:w="2"/><text x="69.0593%" y="239.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&gt;::add (2 samples, 0.04%)</title><rect x="68.8093%" y="213" width="0.0396%" height="15" fill="rgb(231,56,7)" fg:x="3479" fg:w="2"/><text x="69.0593%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="68.8687%" y="181" width="0.0198%" height="15" fill="rgb(244,186,29)" fg:x="3482" fg:w="1"/><text x="69.1187%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="68.9478%" y="165" width="0.0198%" height="15" fill="rgb(234,111,31)" fg:x="3486" fg:w="1"/><text x="69.1978%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 0.45%)</title><rect x="68.8884%" y="181" width="0.4549%" height="15" fill="rgb(241,149,10)" fg:x="3483" fg:w="23"/><text x="69.1384%" y="191.50"></text></g><g><title>malloc (19 samples, 0.38%)</title><rect x="68.9676%" y="165" width="0.3758%" height="15" fill="rgb(249,206,44)" fg:x="3487" fg:w="19"/><text x="69.2176%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (26 samples, 0.51%)</title><rect x="68.8489%" y="229" width="0.5142%" height="15" fill="rgb(251,153,30)" fg:x="3481" fg:w="26"/><text x="69.0989%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.49%)</title><rect x="68.8687%" y="213" width="0.4945%" height="15" fill="rgb(239,152,38)" fg:x="3482" fg:w="25"/><text x="69.1187%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.49%)</title><rect x="68.8687%" y="197" width="0.4945%" height="15" fill="rgb(249,139,47)" fg:x="3482" fg:w="25"/><text x="69.1187%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="69.3434%" y="181" width="0.0198%" height="15" fill="rgb(244,64,35)" fg:x="3506" fg:w="1"/><text x="69.5934%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="69.3434%" y="165" width="0.0198%" height="15" fill="rgb(216,46,15)" fg:x="3506" fg:w="1"/><text x="69.5934%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="69.3434%" y="149" width="0.0198%" height="15" fill="rgb(250,74,19)" fg:x="3506" fg:w="1"/><text x="69.5934%" y="159.50"></text></g><g><title>chess::move_gen::king_moves (143 samples, 2.83%)</title><rect x="66.6930%" y="245" width="2.8283%" height="15" fill="rgb(249,42,33)" fg:x="3372" fg:w="143"/><text x="66.9430%" y="255.50">ch..</text></g><g><title>chess::move_gen::king_moves (8 samples, 0.16%)</title><rect x="69.3631%" y="229" width="0.1582%" height="15" fill="rgb(242,149,17)" fg:x="3507" fg:w="8"/><text x="69.6131%" y="239.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="69.6203%" y="229" width="0.0198%" height="15" fill="rgb(244,29,21)" fg:x="3520" fg:w="1"/><text x="69.8703%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="69.6203%" y="213" width="0.0198%" height="15" fill="rgb(220,130,37)" fg:x="3520" fg:w="1"/><text x="69.8703%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="69.6203%" y="197" width="0.0198%" height="15" fill="rgb(211,67,2)" fg:x="3520" fg:w="1"/><text x="69.8703%" y="207.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="69.6400%" y="181" width="0.0198%" height="15" fill="rgb(235,68,52)" fg:x="3521" fg:w="1"/><text x="69.8900%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="69.6400%" y="229" width="0.0593%" height="15" fill="rgb(246,142,3)" fg:x="3521" fg:w="3"/><text x="69.8900%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="69.6400%" y="213" width="0.0593%" height="15" fill="rgb(241,25,7)" fg:x="3521" fg:w="3"/><text x="69.8900%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="69.6400%" y="197" width="0.0593%" height="15" fill="rgb(242,119,39)" fg:x="3521" fg:w="3"/><text x="69.8900%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="69.6598%" y="181" width="0.0396%" height="15" fill="rgb(241,98,45)" fg:x="3522" fg:w="2"/><text x="69.9098%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="69.6796%" y="165" width="0.0198%" height="15" fill="rgb(254,28,30)" fg:x="3523" fg:w="1"/><text x="69.9296%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="69.6796%" y="149" width="0.0198%" height="15" fill="rgb(241,142,54)" fg:x="3523" fg:w="1"/><text x="69.9296%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="69.6796%" y="133" width="0.0198%" height="15" fill="rgb(222,85,15)" fg:x="3523" fg:w="1"/><text x="69.9296%" y="143.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="69.6796%" y="117" width="0.0198%" height="15" fill="rgb(210,85,47)" fg:x="3523" fg:w="1"/><text x="69.9296%" y="127.50"></text></g><g><title>chess::move_gen::knight_moves (2 samples, 0.04%)</title><rect x="69.6994%" y="229" width="0.0396%" height="15" fill="rgb(224,206,25)" fg:x="3524" fg:w="2"/><text x="69.9494%" y="239.50"></text></g><g><title>chess::move_gen::knight_moves (12 samples, 0.24%)</title><rect x="69.5214%" y="245" width="0.2373%" height="15" fill="rgb(243,201,19)" fg:x="3515" fg:w="12"/><text x="69.7714%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.02%)</title><rect x="69.7389%" y="229" width="0.0198%" height="15" fill="rgb(236,59,4)" fg:x="3526" fg:w="1"/><text x="69.9889%" y="239.50"></text></g><g><title>&lt;i8 as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.02%)</title><rect x="69.7389%" y="213" width="0.0198%" height="15" fill="rgb(254,179,45)" fg:x="3526" fg:w="1"/><text x="69.9889%" y="223.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.02%)</title><rect x="69.7389%" y="197" width="0.0198%" height="15" fill="rgb(226,14,10)" fg:x="3526" fg:w="1"/><text x="69.9889%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.02%)</title><rect x="69.7389%" y="181" width="0.0198%" height="15" fill="rgb(244,27,41)" fg:x="3526" fg:w="1"/><text x="69.9889%" y="191.50"></text></g><g><title>core::slice::memchr::memchr::{{closure}} (1 samples, 0.02%)</title><rect x="69.7389%" y="165" width="0.0198%" height="15" fill="rgb(235,35,32)" fg:x="3526" fg:w="1"/><text x="69.9889%" y="175.50"></text></g><g><title>chess::move_gen::move_gen (33 samples, 0.65%)</title><rect x="69.7587%" y="245" width="0.6527%" height="15" fill="rgb(218,68,31)" fg:x="3527" fg:w="33"/><text x="70.0087%" y="255.50"></text></g><g><title>free (2 samples, 0.04%)</title><rect x="70.3718%" y="229" width="0.0396%" height="15" fill="rgb(207,120,37)" fg:x="3558" fg:w="2"/><text x="70.6218%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="70.3916%" y="213" width="0.0198%" height="15" fill="rgb(227,98,0)" fg:x="3559" fg:w="1"/><text x="70.6416%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="73.2793%" y="229" width="0.0396%" height="15" fill="rgb(207,7,3)" fg:x="3705" fg:w="2"/><text x="73.5293%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (5 samples, 0.10%)</title><rect x="73.3188%" y="229" width="0.0989%" height="15" fill="rgb(206,98,19)" fg:x="3707" fg:w="5"/><text x="73.5688%" y="239.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="73.5759%" y="181" width="0.0198%" height="15" fill="rgb(217,5,26)" fg:x="3720" fg:w="1"/><text x="73.8259%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.12%)</title><rect x="73.5957%" y="181" width="0.1187%" height="15" fill="rgb(235,190,38)" fg:x="3721" fg:w="6"/><text x="73.8457%" y="191.50"></text></g><g><title>__rdl_realloc (6 samples, 0.12%)</title><rect x="73.8331%" y="117" width="0.1187%" height="15" fill="rgb(247,86,24)" fg:x="3733" fg:w="6"/><text x="74.0831%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.08%)</title><rect x="73.8726%" y="101" width="0.0791%" height="15" fill="rgb(205,101,16)" fg:x="3735" fg:w="4"/><text x="74.1226%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (99 samples, 1.96%)</title><rect x="73.7737%" y="165" width="1.9581%" height="15" fill="rgb(246,168,33)" fg:x="3730" fg:w="99"/><text x="74.0237%" y="175.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (99 samples, 1.96%)</title><rect x="73.7737%" y="149" width="1.9581%" height="15" fill="rgb(231,114,1)" fg:x="3730" fg:w="99"/><text x="74.0237%" y="159.50">a..</text></g><g><title>alloc::alloc::realloc (98 samples, 1.94%)</title><rect x="73.7935%" y="133" width="1.9383%" height="15" fill="rgb(207,184,53)" fg:x="3731" fg:w="98"/><text x="74.0435%" y="143.50">a..</text></g><g><title>realloc (90 samples, 1.78%)</title><rect x="73.9517%" y="117" width="1.7801%" height="15" fill="rgb(224,95,51)" fg:x="3739" fg:w="90"/><text x="74.2017%" y="127.50">r..</text></g><g><title>[libc.so.6] (70 samples, 1.38%)</title><rect x="74.3473%" y="101" width="1.3845%" height="15" fill="rgb(212,188,45)" fg:x="3759" fg:w="70"/><text x="74.5973%" y="111.50"></text></g><g><title>[libc.so.6] (52 samples, 1.03%)</title><rect x="74.7033%" y="85" width="1.0285%" height="15" fill="rgb(223,154,38)" fg:x="3777" fg:w="52"/><text x="74.9533%" y="95.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="75.7318%" y="165" width="0.0198%" height="15" fill="rgb(251,22,52)" fg:x="3829" fg:w="1"/><text x="75.9818%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="75.7318%" y="149" width="0.0198%" height="15" fill="rgb(229,209,22)" fg:x="3829" fg:w="1"/><text x="75.9818%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (119 samples, 2.35%)</title><rect x="73.7144%" y="181" width="2.3536%" height="15" fill="rgb(234,138,34)" fg:x="3727" fg:w="119"/><text x="73.9644%" y="191.50">a..</text></g><g><title>malloc (16 samples, 0.32%)</title><rect x="75.7516%" y="165" width="0.3165%" height="15" fill="rgb(212,95,11)" fg:x="3830" fg:w="16"/><text x="76.0016%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.12%)</title><rect x="76.0680%" y="181" width="0.1187%" height="15" fill="rgb(240,179,47)" fg:x="3846" fg:w="6"/><text x="76.3180%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (5 samples, 0.10%)</title><rect x="76.0878%" y="165" width="0.0989%" height="15" fill="rgb(240,163,11)" fg:x="3847" fg:w="5"/><text x="76.3378%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (5 samples, 0.10%)</title><rect x="76.0878%" y="149" width="0.0989%" height="15" fill="rgb(236,37,12)" fg:x="3847" fg:w="5"/><text x="76.3378%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (134 samples, 2.65%)</title><rect x="73.5759%" y="197" width="2.6503%" height="15" fill="rgb(232,164,16)" fg:x="3720" fg:w="134"/><text x="73.8259%" y="207.50">al..</text></g><g><title>core::cmp::max (2 samples, 0.04%)</title><rect x="76.1867%" y="181" width="0.0396%" height="15" fill="rgb(244,205,15)" fg:x="3852" fg:w="2"/><text x="76.4367%" y="191.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.04%)</title><rect x="76.1867%" y="165" width="0.0396%" height="15" fill="rgb(223,117,47)" fg:x="3852" fg:w="2"/><text x="76.4367%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="76.1867%" y="149" width="0.0396%" height="15" fill="rgb(244,107,35)" fg:x="3852" fg:w="2"/><text x="76.4367%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (137 samples, 2.71%)</title><rect x="73.5759%" y="213" width="2.7097%" height="15" fill="rgb(205,140,8)" fg:x="3720" fg:w="137"/><text x="73.8259%" y="223.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="76.2263%" y="197" width="0.0593%" height="15" fill="rgb(228,84,46)" fg:x="3854" fg:w="3"/><text x="76.4763%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.08%)</title><rect x="76.2856%" y="213" width="0.0791%" height="15" fill="rgb(254,188,9)" fg:x="3857" fg:w="4"/><text x="76.5356%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="76.3647%" y="213" width="0.0198%" height="15" fill="rgb(206,112,54)" fg:x="3861" fg:w="1"/><text x="76.6147%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="76.3647%" y="197" width="0.0198%" height="15" fill="rgb(216,84,49)" fg:x="3861" fg:w="1"/><text x="76.6147%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (166 samples, 3.28%)</title><rect x="73.4177%" y="229" width="3.2832%" height="15" fill="rgb(214,194,35)" fg:x="3712" fg:w="166"/><text x="73.6677%" y="239.50">all..</text></g><g><title>core::ptr::write (16 samples, 0.32%)</title><rect x="76.3845%" y="213" width="0.3165%" height="15" fill="rgb(249,28,3)" fg:x="3862" fg:w="16"/><text x="76.6345%" y="223.50"></text></g><g><title>chess::attack_gen::direction_sliding (10 samples, 0.20%)</title><rect x="76.7207%" y="213" width="0.1978%" height="15" fill="rgb(222,56,52)" fg:x="3879" fg:w="10"/><text x="76.9707%" y="223.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&lt;&amp;i8&gt;&gt;::add (1 samples, 0.02%)</title><rect x="76.8987%" y="197" width="0.0198%" height="15" fill="rgb(245,217,50)" fg:x="3888" fg:w="1"/><text x="77.1487%" y="207.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="76.8987%" y="181" width="0.0198%" height="15" fill="rgb(213,201,24)" fg:x="3888" fg:w="1"/><text x="77.1487%" y="191.50"></text></g><g><title>chess::move_gen::discover_check (13 samples, 0.26%)</title><rect x="76.7009%" y="229" width="0.2571%" height="15" fill="rgb(248,116,28)" fg:x="3878" fg:w="13"/><text x="76.9509%" y="239.50"></text></g><g><title>chess::move_gen::discover_check (2 samples, 0.04%)</title><rect x="76.9185%" y="213" width="0.0396%" height="15" fill="rgb(219,72,43)" fg:x="3889" fg:w="2"/><text x="77.1685%" y="223.50"></text></g><g><title>chess::move_gen::is_pawn_move (2 samples, 0.04%)</title><rect x="76.9581%" y="229" width="0.0396%" height="15" fill="rgb(209,138,14)" fg:x="3891" fg:w="2"/><text x="77.2081%" y="239.50"></text></g><g><title>chess::move_gen::pawn_moves (6 samples, 0.12%)</title><rect x="76.9976%" y="229" width="0.1187%" height="15" fill="rgb(222,18,33)" fg:x="3893" fg:w="6"/><text x="77.2476%" y="239.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.02%)</title><rect x="77.1163%" y="229" width="0.0198%" height="15" fill="rgb(213,199,7)" fg:x="3899" fg:w="1"/><text x="77.3663%" y="239.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.02%)</title><rect x="77.1163%" y="213" width="0.0198%" height="15" fill="rgb(250,110,10)" fg:x="3899" fg:w="1"/><text x="77.3663%" y="223.50"></text></g><g><title>&lt;i8 as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.02%)</title><rect x="77.1361%" y="213" width="0.0198%" height="15" fill="rgb(248,123,6)" fg:x="3900" fg:w="1"/><text x="77.3861%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="77.1361%" y="197" width="0.0198%" height="15" fill="rgb(206,91,31)" fg:x="3900" fg:w="1"/><text x="77.3861%" y="207.50"></text></g><g><title>chess::move_gen::pawn_moves (342 samples, 6.76%)</title><rect x="70.4114%" y="245" width="6.7642%" height="15" fill="rgb(211,154,13)" fg:x="3560" fg:w="342"/><text x="70.6614%" y="255.50">chess::mo..</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.04%)</title><rect x="77.1361%" y="229" width="0.0396%" height="15" fill="rgb(225,148,7)" fg:x="3900" fg:w="2"/><text x="77.3861%" y="239.50"></text></g><g><title>chess::move_gen::pawn_moves (1 samples, 0.02%)</title><rect x="77.1559%" y="213" width="0.0198%" height="15" fill="rgb(220,160,43)" fg:x="3901" fg:w="1"/><text x="77.4059%" y="223.50"></text></g><g><title>chess::piece::PieceList::add (2 samples, 0.04%)</title><rect x="77.7097%" y="197" width="0.0396%" height="15" fill="rgb(213,52,39)" fg:x="3929" fg:w="2"/><text x="77.9597%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.20%)</title><rect x="77.6108%" y="229" width="0.1978%" height="15" fill="rgb(243,137,7)" fg:x="3924" fg:w="10"/><text x="77.8608%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.10%)</title><rect x="77.7097%" y="213" width="0.0989%" height="15" fill="rgb(230,79,13)" fg:x="3929" fg:w="5"/><text x="77.9597%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.06%)</title><rect x="77.7492%" y="197" width="0.0593%" height="15" fill="rgb(247,105,23)" fg:x="3931" fg:w="3"/><text x="77.9992%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect x="77.8085%" y="133" width="0.0593%" height="15" fill="rgb(223,179,41)" fg:x="3934" fg:w="3"/><text x="78.0585%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect x="77.8085%" y="117" width="0.0593%" height="15" fill="rgb(218,9,34)" fg:x="3934" fg:w="3"/><text x="78.0585%" y="127.50"></text></g><g><title>free (2 samples, 0.04%)</title><rect x="77.8283%" y="101" width="0.0396%" height="15" fill="rgb(222,106,8)" fg:x="3935" fg:w="2"/><text x="78.0783%" y="111.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="77.8283%" y="85" width="0.0396%" height="15" fill="rgb(211,220,0)" fg:x="3935" fg:w="2"/><text x="78.0783%" y="95.50"></text></g><g><title>chess::piece::PieceList::add (41 samples, 0.81%)</title><rect x="77.1756%" y="245" width="0.8109%" height="15" fill="rgb(229,52,16)" fg:x="3902" fg:w="41"/><text x="77.4256%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;i8&gt;&gt; (9 samples, 0.18%)</title><rect x="77.8085%" y="229" width="0.1780%" height="15" fill="rgb(212,155,18)" fg:x="3934" fg:w="9"/><text x="78.0585%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.18%)</title><rect x="77.8085%" y="213" width="0.1780%" height="15" fill="rgb(242,21,14)" fg:x="3934" fg:w="9"/><text x="78.0585%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;i8,alloc::alloc::Global&gt;&gt; (9 samples, 0.18%)</title><rect x="77.8085%" y="197" width="0.1780%" height="15" fill="rgb(222,19,48)" fg:x="3934" fg:w="9"/><text x="78.0585%" y="207.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.18%)</title><rect x="77.8085%" y="181" width="0.1780%" height="15" fill="rgb(232,45,27)" fg:x="3934" fg:w="9"/><text x="78.0585%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i8&gt;&gt; (9 samples, 0.18%)</title><rect x="77.8085%" y="165" width="0.1780%" height="15" fill="rgb(249,103,42)" fg:x="3934" fg:w="9"/><text x="78.0585%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.18%)</title><rect x="77.8085%" y="149" width="0.1780%" height="15" fill="rgb(246,81,33)" fg:x="3934" fg:w="9"/><text x="78.0585%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.12%)</title><rect x="77.8679%" y="133" width="0.1187%" height="15" fill="rgb(252,33,42)" fg:x="3937" fg:w="6"/><text x="78.1179%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="78.0063%" y="229" width="0.0593%" height="15" fill="rgb(209,212,41)" fg:x="3944" fg:w="3"/><text x="78.2563%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="78.1250%" y="213" width="0.0198%" height="15" fill="rgb(207,154,6)" fg:x="3950" fg:w="1"/><text x="78.3750%" y="223.50"></text></g><g><title>chess::piece::PieceList::diference (9 samples, 0.18%)</title><rect x="77.9866%" y="245" width="0.1780%" height="15" fill="rgb(223,64,47)" fg:x="3943" fg:w="9"/><text x="78.2366%" y="255.50"></text></g><g><title>chess::piece::PieceList::remove (5 samples, 0.10%)</title><rect x="78.0657%" y="229" width="0.0989%" height="15" fill="rgb(211,161,38)" fg:x="3947" fg:w="5"/><text x="78.3157%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.02%)</title><rect x="78.1448%" y="213" width="0.0198%" height="15" fill="rgb(219,138,40)" fg:x="3951" fg:w="1"/><text x="78.3948%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="78.1646%" y="245" width="0.0198%" height="15" fill="rgb(241,228,46)" fg:x="3952" fg:w="1"/><text x="78.4146%" y="255.50"></text></g><g><title>__rdl_dealloc (11 samples, 0.22%)</title><rect x="78.4019%" y="165" width="0.2176%" height="15" fill="rgb(223,209,38)" fg:x="3964" fg:w="11"/><text x="78.6519%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (11 samples, 0.22%)</title><rect x="78.4019%" y="149" width="0.2176%" height="15" fill="rgb(236,164,45)" fg:x="3964" fg:w="11"/><text x="78.6519%" y="159.50"></text></g><g><title>__rust_dealloc (5 samples, 0.10%)</title><rect x="78.6195%" y="165" width="0.0989%" height="15" fill="rgb(231,15,5)" fg:x="3975" fg:w="5"/><text x="78.8695%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (163 samples, 3.22%)</title><rect x="78.3030%" y="197" width="3.2239%" height="15" fill="rgb(252,35,15)" fg:x="3959" fg:w="163"/><text x="78.5530%" y="207.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (163 samples, 3.22%)</title><rect x="78.3030%" y="181" width="3.2239%" height="15" fill="rgb(248,181,18)" fg:x="3959" fg:w="163"/><text x="78.5530%" y="191.50">all..</text></g><g><title>free (142 samples, 2.81%)</title><rect x="78.7184%" y="165" width="2.8085%" height="15" fill="rgb(233,39,42)" fg:x="3980" fg:w="142"/><text x="78.9684%" y="175.50">fr..</text></g><g><title>[libc.so.6] (106 samples, 2.10%)</title><rect x="79.4304%" y="149" width="2.0965%" height="15" fill="rgb(238,110,33)" fg:x="4016" fg:w="106"/><text x="79.6804%" y="159.50">[..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chess::move_gen::Move&gt;&gt; (175 samples, 3.46%)</title><rect x="78.1843%" y="245" width="3.4612%" height="15" fill="rgb(233,195,10)" fg:x="3953" fg:w="175"/><text x="78.4343%" y="255.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chess::move_gen::Move&gt;&gt; (175 samples, 3.46%)</title><rect x="78.1843%" y="229" width="3.4612%" height="15" fill="rgb(254,105,3)" fg:x="3953" fg:w="175"/><text x="78.4343%" y="239.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (175 samples, 3.46%)</title><rect x="78.1843%" y="213" width="3.4612%" height="15" fill="rgb(221,225,9)" fg:x="3953" fg:w="175"/><text x="78.4343%" y="223.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.12%)</title><rect x="81.5269%" y="197" width="0.1187%" height="15" fill="rgb(224,227,45)" fg:x="4122" fg:w="6"/><text x="81.7769%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.04%)</title><rect x="81.6060%" y="181" width="0.0396%" height="15" fill="rgb(229,198,43)" fg:x="4126" fg:w="2"/><text x="81.8560%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (2 samples, 0.04%)</title><rect x="81.6060%" y="165" width="0.0396%" height="15" fill="rgb(206,209,35)" fg:x="4126" fg:w="2"/><text x="81.8560%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (2 samples, 0.04%)</title><rect x="81.6060%" y="149" width="0.0396%" height="15" fill="rgb(245,195,53)" fg:x="4126" fg:w="2"/><text x="81.8560%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i8&gt;&gt; (2 samples, 0.04%)</title><rect x="81.6456%" y="245" width="0.0396%" height="15" fill="rgb(240,92,26)" fg:x="4128" fg:w="2"/><text x="81.8956%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i8&gt;&gt; (2 samples, 0.04%)</title><rect x="81.6456%" y="229" width="0.0396%" height="15" fill="rgb(207,40,23)" fg:x="4128" fg:w="2"/><text x="81.8956%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="81.6456%" y="213" width="0.0396%" height="15" fill="rgb(223,111,35)" fg:x="4128" fg:w="2"/><text x="81.8956%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="81.6456%" y="197" width="0.0396%" height="15" fill="rgb(229,147,28)" fg:x="4128" fg:w="2"/><text x="81.8956%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="81.6456%" y="181" width="0.0396%" height="15" fill="rgb(211,29,28)" fg:x="4128" fg:w="2"/><text x="81.8956%" y="191.50"></text></g><g><title>free (2 samples, 0.04%)</title><rect x="81.6456%" y="165" width="0.0396%" height="15" fill="rgb(228,72,33)" fg:x="4128" fg:w="2"/><text x="81.8956%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="81.6653%" y="149" width="0.0198%" height="15" fill="rgb(205,214,31)" fg:x="4129" fg:w="1"/><text x="81.9153%" y="159.50"></text></g><g><title>chess::move_gen::move_gen (2,964 samples, 58.62%)</title><rect x="23.1210%" y="261" width="58.6234%" height="15" fill="rgb(224,111,15)" fg:x="1169" fg:w="2964"/><text x="23.3710%" y="271.50">chess::move_gen::move_gen</text></g><g><title>core::slice::&lt;impl [T]&gt;::last (3 samples, 0.06%)</title><rect x="81.6851%" y="245" width="0.0593%" height="15" fill="rgb(253,21,26)" fg:x="4130" fg:w="3"/><text x="81.9351%" y="255.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="81.8038%" y="181" width="0.0198%" height="15" fill="rgb(245,139,43)" fg:x="4136" fg:w="1"/><text x="82.0538%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="81.8038%" y="165" width="0.0198%" height="15" fill="rgb(252,170,7)" fg:x="4136" fg:w="1"/><text x="82.0538%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (148 samples, 2.93%)</title><rect x="81.7445%" y="197" width="2.9272%" height="15" fill="rgb(231,118,14)" fg:x="4133" fg:w="148"/><text x="81.9945%" y="207.50">al..</text></g><g><title>free (144 samples, 2.85%)</title><rect x="81.8236%" y="181" width="2.8481%" height="15" fill="rgb(238,83,0)" fg:x="4137" fg:w="144"/><text x="82.0736%" y="191.50">fr..</text></g><g><title>[libc.so.6] (139 samples, 2.75%)</title><rect x="81.9225%" y="165" width="2.7492%" height="15" fill="rgb(221,39,39)" fg:x="4142" fg:w="139"/><text x="82.1725%" y="175.50">[l..</text></g><g><title>[libc.so.6] (103 samples, 2.04%)</title><rect x="82.6345%" y="149" width="2.0372%" height="15" fill="rgb(222,119,46)" fg:x="4178" fg:w="103"/><text x="82.8845%" y="159.50">[..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chess::move_gen::Move&gt;&gt; (149 samples, 2.95%)</title><rect x="81.7445%" y="261" width="2.9470%" height="15" fill="rgb(222,165,49)" fg:x="4133" fg:w="149"/><text x="81.9945%" y="271.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chess::move_gen::Move&gt;&gt; (149 samples, 2.95%)</title><rect x="81.7445%" y="245" width="2.9470%" height="15" fill="rgb(219,113,52)" fg:x="4133" fg:w="149"/><text x="81.9945%" y="255.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (149 samples, 2.95%)</title><rect x="81.7445%" y="229" width="2.9470%" height="15" fill="rgb(214,7,15)" fg:x="4133" fg:w="149"/><text x="81.9945%" y="239.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (149 samples, 2.95%)</title><rect x="81.7445%" y="213" width="2.9470%" height="15" fill="rgb(235,32,4)" fg:x="4133" fg:w="149"/><text x="81.9945%" y="223.50">&lt;a..</text></g><g><title>chess::eval::eval (1 samples, 0.02%)</title><rect x="84.6717%" y="197" width="0.0198%" height="15" fill="rgb(238,90,54)" fg:x="4281" fg:w="1"/><text x="84.9217%" y="207.50"></text></g><g><title>chess::eval::eval (1 samples, 0.02%)</title><rect x="84.6915%" y="149" width="0.0198%" height="15" fill="rgb(213,208,19)" fg:x="4282" fg:w="1"/><text x="84.9415%" y="159.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (6 samples, 0.12%)</title><rect x="84.6915%" y="165" width="0.1187%" height="15" fill="rgb(233,156,4)" fg:x="4282" fg:w="6"/><text x="84.9415%" y="175.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (5 samples, 0.10%)</title><rect x="84.7112%" y="149" width="0.0989%" height="15" fill="rgb(207,194,5)" fg:x="4283" fg:w="5"/><text x="84.9612%" y="159.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (4 samples, 0.08%)</title><rect x="84.7310%" y="133" width="0.0791%" height="15" fill="rgb(206,111,30)" fg:x="4284" fg:w="4"/><text x="84.9810%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.08%)</title><rect x="84.7310%" y="117" width="0.0791%" height="15" fill="rgb(243,70,54)" fg:x="4284" fg:w="4"/><text x="84.9810%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (10 samples, 0.20%)</title><rect x="84.6915%" y="229" width="0.1978%" height="15" fill="rgb(242,28,8)" fg:x="4282" fg:w="10"/><text x="84.9415%" y="239.50"></text></g><g><title>std::collections::hash::map::RandomState::new (10 samples, 0.20%)</title><rect x="84.6915%" y="213" width="0.1978%" height="15" fill="rgb(219,106,18)" fg:x="4282" fg:w="10"/><text x="84.9415%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.20%)</title><rect x="84.6915%" y="197" width="0.1978%" height="15" fill="rgb(244,222,10)" fg:x="4282" fg:w="10"/><text x="84.9415%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.20%)</title><rect x="84.6915%" y="181" width="0.1978%" height="15" fill="rgb(236,179,52)" fg:x="4282" fg:w="10"/><text x="84.9415%" y="191.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (4 samples, 0.08%)</title><rect x="84.8101%" y="165" width="0.0791%" height="15" fill="rgb(213,23,39)" fg:x="4288" fg:w="4"/><text x="85.0601%" y="175.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.08%)</title><rect x="84.8101%" y="149" width="0.0791%" height="15" fill="rgb(238,48,10)" fg:x="4288" fg:w="4"/><text x="85.0601%" y="159.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.08%)</title><rect x="84.8101%" y="133" width="0.0791%" height="15" fill="rgb(251,196,23)" fg:x="4288" fg:w="4"/><text x="85.0601%" y="143.50"></text></g><g><title>core::mem::replace (4 samples, 0.08%)</title><rect x="84.8101%" y="117" width="0.0791%" height="15" fill="rgb(250,152,24)" fg:x="4288" fg:w="4"/><text x="85.0601%" y="127.50"></text></g><g><title>core::ptr::write (4 samples, 0.08%)</title><rect x="84.8101%" y="101" width="0.0791%" height="15" fill="rgb(209,150,17)" fg:x="4288" fg:w="4"/><text x="85.0601%" y="111.50"></text></g><g><title>chess::eval::eval (3,536 samples, 69.94%)</title><rect x="14.9723%" y="277" width="69.9367%" height="15" fill="rgb(234,202,34)" fg:x="757" fg:w="3536"/><text x="15.2223%" y="287.50">chess::eval::eval</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (11 samples, 0.22%)</title><rect x="84.6915%" y="261" width="0.2176%" height="15" fill="rgb(253,148,53)" fg:x="4282" fg:w="11"/><text x="84.9415%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (11 samples, 0.22%)</title><rect x="84.6915%" y="245" width="0.2176%" height="15" fill="rgb(218,129,16)" fg:x="4282" fg:w="11"/><text x="84.9415%" y="255.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.02%)</title><rect x="84.8892%" y="229" width="0.0198%" height="15" fill="rgb(216,85,19)" fg:x="4292" fg:w="1"/><text x="85.1392%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="85.1661%" y="261" width="0.0198%" height="15" fill="rgb(235,228,7)" fg:x="4306" fg:w="1"/><text x="85.4161%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="85.1661%" y="245" width="0.0198%" height="15" fill="rgb(245,175,0)" fg:x="4306" fg:w="1"/><text x="85.4161%" y="255.50"></text></g><g><title>chess::make_move::aux (15 samples, 0.30%)</title><rect x="85.1859%" y="261" width="0.2967%" height="15" fill="rgb(208,168,36)" fg:x="4307" fg:w="15"/><text x="85.4359%" y="271.50"></text></g><g><title>chess::zobrist_hashing::HashingNumbers::hash_move (13 samples, 0.26%)</title><rect x="85.2255%" y="245" width="0.2571%" height="15" fill="rgb(246,171,24)" fg:x="4309" fg:w="13"/><text x="85.4755%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.24%)</title><rect x="85.6804%" y="245" width="0.2373%" height="15" fill="rgb(215,142,24)" fg:x="4332" fg:w="12"/><text x="85.9304%" y="255.50"></text></g><g><title>core::ptr::write (9 samples, 0.18%)</title><rect x="85.7397%" y="229" width="0.1780%" height="15" fill="rgb(250,187,7)" fg:x="4335" fg:w="9"/><text x="85.9897%" y="239.50"></text></g><g><title>chess::make_move::update_game_state (25 samples, 0.49%)</title><rect x="85.4826%" y="261" width="0.4945%" height="15" fill="rgb(228,66,33)" fg:x="4322" fg:w="25"/><text x="85.7326%" y="271.50"></text></g><g><title>chess::make_move::aux (3 samples, 0.06%)</title><rect x="85.9177%" y="245" width="0.0593%" height="15" fill="rgb(234,215,21)" fg:x="4344" fg:w="3"/><text x="86.1677%" y="255.50"></text></g><g><title>chess::piece::PieceList::make_move (5 samples, 0.10%)</title><rect x="85.9771%" y="261" width="0.0989%" height="15" fill="rgb(222,191,20)" fg:x="4347" fg:w="5"/><text x="86.2271%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="86.0562%" y="245" width="0.0198%" height="15" fill="rgb(245,79,54)" fg:x="4351" fg:w="1"/><text x="86.3062%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="86.0562%" y="229" width="0.0198%" height="15" fill="rgb(240,10,37)" fg:x="4351" fg:w="1"/><text x="86.3062%" y="239.50"></text></g><g><title>chess::zobrist_hashing::Hash::hash_move (11 samples, 0.22%)</title><rect x="86.0759%" y="261" width="0.2176%" height="15" fill="rgb(214,192,32)" fg:x="4352" fg:w="11"/><text x="86.3259%" y="271.50"></text></g><g><title>chess::api::board120_to_board64 (11 samples, 0.22%)</title><rect x="86.0759%" y="245" width="0.2176%" height="15" fill="rgb(209,36,54)" fg:x="4352" fg:w="11"/><text x="86.3259%" y="255.50"></text></g><g><title>chess::make_move::aux (71 samples, 1.40%)</title><rect x="84.9090%" y="277" width="1.4043%" height="15" fill="rgb(220,10,11)" fg:x="4293" fg:w="71"/><text x="85.1590%" y="287.50"></text></g><g><title>chess::zobrist_hashing::HashingNumbers::hash_move (1 samples, 0.02%)</title><rect x="86.2935%" y="261" width="0.0198%" height="15" fill="rgb(221,106,17)" fg:x="4363" fg:w="1"/><text x="86.5435%" y="271.50"></text></g><g><title>chess::make_move::make_move (1 samples, 0.02%)</title><rect x="86.3133%" y="277" width="0.0198%" height="15" fill="rgb(251,142,44)" fg:x="4364" fg:w="1"/><text x="86.5633%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="86.3726%" y="261" width="0.0198%" height="15" fill="rgb(238,13,15)" fg:x="4367" fg:w="1"/><text x="86.6226%" y="271.50"></text></g><g><title>[libc.so.6] (5 samples, 0.10%)</title><rect x="86.3924%" y="261" width="0.0989%" height="15" fill="rgb(208,107,27)" fg:x="4368" fg:w="5"/><text x="86.6424%" y="271.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="86.5704%" y="101" width="0.0198%" height="15" fill="rgb(205,136,37)" fg:x="4377" fg:w="1"/><text x="86.8204%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (35 samples, 0.69%)</title><rect x="86.5704%" y="149" width="0.6922%" height="15" fill="rgb(250,205,27)" fg:x="4377" fg:w="35"/><text x="86.8204%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (35 samples, 0.69%)</title><rect x="86.5704%" y="133" width="0.6922%" height="15" fill="rgb(210,80,43)" fg:x="4377" fg:w="35"/><text x="86.8204%" y="143.50"></text></g><g><title>alloc::alloc::realloc (35 samples, 0.69%)</title><rect x="86.5704%" y="117" width="0.6922%" height="15" fill="rgb(247,160,36)" fg:x="4377" fg:w="35"/><text x="86.8204%" y="127.50"></text></g><g><title>realloc (34 samples, 0.67%)</title><rect x="86.5902%" y="101" width="0.6725%" height="15" fill="rgb(234,13,49)" fg:x="4378" fg:w="34"/><text x="86.8402%" y="111.50"></text></g><g><title>[libc.so.6] (29 samples, 0.57%)</title><rect x="86.6891%" y="85" width="0.5736%" height="15" fill="rgb(234,122,0)" fg:x="4383" fg:w="29"/><text x="86.9391%" y="95.50"></text></g><g><title>[libc.so.6] (27 samples, 0.53%)</title><rect x="86.7286%" y="69" width="0.5340%" height="15" fill="rgb(207,146,38)" fg:x="4385" fg:w="27"/><text x="86.9786%" y="79.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="87.2627%" y="149" width="0.0198%" height="15" fill="rgb(207,177,25)" fg:x="4412" fg:w="1"/><text x="87.5127%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="87.2627%" y="133" width="0.0198%" height="15" fill="rgb(211,178,42)" fg:x="4412" fg:w="1"/><text x="87.5127%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.77%)</title><rect x="86.5309%" y="165" width="0.7714%" height="15" fill="rgb(230,69,54)" fg:x="4375" fg:w="39"/><text x="86.7809%" y="175.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="87.2824%" y="149" width="0.0198%" height="15" fill="rgb(214,135,41)" fg:x="4413" fg:w="1"/><text x="87.5324%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (42 samples, 0.83%)</title><rect x="86.4913%" y="229" width="0.8307%" height="15" fill="rgb(237,67,25)" fg:x="4373" fg:w="42"/><text x="86.7413%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (42 samples, 0.83%)</title><rect x="86.4913%" y="213" width="0.8307%" height="15" fill="rgb(222,189,50)" fg:x="4373" fg:w="42"/><text x="86.7413%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.81%)</title><rect x="86.5111%" y="197" width="0.8109%" height="15" fill="rgb(245,148,34)" fg:x="4374" fg:w="41"/><text x="86.7611%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (41 samples, 0.81%)</title><rect x="86.5111%" y="181" width="0.8109%" height="15" fill="rgb(222,29,6)" fg:x="4374" fg:w="41"/><text x="86.7611%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="87.3022%" y="165" width="0.0198%" height="15" fill="rgb(221,189,43)" fg:x="4414" fg:w="1"/><text x="87.5522%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="87.3022%" y="149" width="0.0198%" height="15" fill="rgb(207,36,27)" fg:x="4414" fg:w="1"/><text x="87.5522%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="87.3022%" y="133" width="0.0198%" height="15" fill="rgb(217,90,24)" fg:x="4414" fg:w="1"/><text x="87.5522%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (50 samples, 0.99%)</title><rect x="86.4913%" y="261" width="0.9889%" height="15" fill="rgb(224,66,35)" fg:x="4373" fg:w="50"/><text x="86.7413%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (50 samples, 0.99%)</title><rect x="86.4913%" y="245" width="0.9889%" height="15" fill="rgb(221,13,50)" fg:x="4373" fg:w="50"/><text x="86.7413%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.16%)</title><rect x="87.3220%" y="229" width="0.1582%" height="15" fill="rgb(236,68,49)" fg:x="4415" fg:w="8"/><text x="87.5720%" y="239.50"></text></g><g><title>[libc.so.6] (7 samples, 0.14%)</title><rect x="87.3418%" y="213" width="0.1384%" height="15" fill="rgb(229,146,28)" fg:x="4416" fg:w="7"/><text x="87.5918%" y="223.50"></text></g><g><title>chess::attack_gen::attack_gen (7 samples, 0.14%)</title><rect x="87.5396%" y="245" width="0.1384%" height="15" fill="rgb(225,31,38)" fg:x="4426" fg:w="7"/><text x="87.7896%" y="255.50"></text></g><g><title>chess::attack_gen::direction_sliding (31 samples, 0.61%)</title><rect x="87.6780%" y="245" width="0.6131%" height="15" fill="rgb(250,208,3)" fg:x="4433" fg:w="31"/><text x="87.9280%" y="255.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.06%)</title><rect x="88.2318%" y="229" width="0.0593%" height="15" fill="rgb(246,54,23)" fg:x="4461" fg:w="3"/><text x="88.4818%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="88.2714%" y="213" width="0.0198%" height="15" fill="rgb(243,76,11)" fg:x="4463" fg:w="1"/><text x="88.5214%" y="223.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="88.2714%" y="197" width="0.0198%" height="15" fill="rgb(245,21,50)" fg:x="4463" fg:w="1"/><text x="88.5214%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="88.2714%" y="181" width="0.0198%" height="15" fill="rgb(228,9,43)" fg:x="4463" fg:w="1"/><text x="88.5214%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="88.2714%" y="165" width="0.0198%" height="15" fill="rgb(208,100,47)" fg:x="4463" fg:w="1"/><text x="88.5214%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="88.3900%" y="229" width="0.0396%" height="15" fill="rgb(232,26,8)" fg:x="4469" fg:w="2"/><text x="88.6400%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="88.4098%" y="213" width="0.0198%" height="15" fill="rgb(216,166,38)" fg:x="4470" fg:w="1"/><text x="88.6598%" y="223.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&lt;&amp;i8&gt;&gt;::add (1 samples, 0.02%)</title><rect x="88.4296%" y="229" width="0.0198%" height="15" fill="rgb(251,202,51)" fg:x="4471" fg:w="1"/><text x="88.6796%" y="239.50"></text></g><g><title>&lt;i8 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="88.4296%" y="213" width="0.0198%" height="15" fill="rgb(254,216,34)" fg:x="4471" fg:w="1"/><text x="88.6796%" y="223.50"></text></g><g><title>chess::attack_gen::king_moves (9 samples, 0.18%)</title><rect x="88.2911%" y="245" width="0.1780%" height="15" fill="rgb(251,32,27)" fg:x="4464" fg:w="9"/><text x="88.5411%" y="255.50"></text></g><g><title>chess::attack_gen::attack_gen (1 samples, 0.02%)</title><rect x="88.4494%" y="229" width="0.0198%" height="15" fill="rgb(208,127,28)" fg:x="4472" fg:w="1"/><text x="88.6994%" y="239.50"></text></g><g><title>chess::attack_gen::pawn_moves (5 samples, 0.10%)</title><rect x="88.4691%" y="245" width="0.0989%" height="15" fill="rgb(224,137,22)" fg:x="4473" fg:w="5"/><text x="88.7191%" y="255.50"></text></g><g><title>chess::attack_gen::attack_gen (56 samples, 1.11%)</title><rect x="87.4802%" y="261" width="1.1076%" height="15" fill="rgb(254,70,32)" fg:x="4423" fg:w="56"/><text x="87.7302%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="88.5680%" y="245" width="0.0198%" height="15" fill="rgb(229,75,37)" fg:x="4478" fg:w="1"/><text x="88.8180%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="89.1416%" y="245" width="0.0198%" height="15" fill="rgb(252,64,23)" fg:x="4507" fg:w="1"/><text x="89.3916%" y="255.50"></text></g><g><title>&lt;i8 as core::ops::arith::AddAssign&lt;&amp;i8&gt;&gt;::add_assign (2 samples, 0.04%)</title><rect x="89.1614%" y="245" width="0.0396%" height="15" fill="rgb(232,162,48)" fg:x="4508" fg:w="2"/><text x="89.4114%" y="255.50"></text></g><g><title>&lt;i8 as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.04%)</title><rect x="89.1614%" y="229" width="0.0396%" height="15" fill="rgb(246,160,12)" fg:x="4508" fg:w="2"/><text x="89.4114%" y="239.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.04%)</title><rect x="89.2405%" y="197" width="0.0396%" height="15" fill="rgb(247,166,0)" fg:x="4512" fg:w="2"/><text x="89.4905%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="89.2801%" y="197" width="0.0198%" height="15" fill="rgb(249,219,21)" fg:x="4514" fg:w="1"/><text x="89.5301%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="89.2998%" y="197" width="0.0198%" height="15" fill="rgb(205,209,3)" fg:x="4515" fg:w="1"/><text x="89.5498%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.36%)</title><rect x="89.3394%" y="181" width="0.3560%" height="15" fill="rgb(243,44,1)" fg:x="4517" fg:w="18"/><text x="89.5894%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.36%)</title><rect x="89.3394%" y="165" width="0.3560%" height="15" fill="rgb(206,159,16)" fg:x="4517" fg:w="18"/><text x="89.5894%" y="175.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.36%)</title><rect x="89.3394%" y="149" width="0.3560%" height="15" fill="rgb(244,77,30)" fg:x="4517" fg:w="18"/><text x="89.5894%" y="159.50"></text></g><g><title>realloc (18 samples, 0.36%)</title><rect x="89.3394%" y="133" width="0.3560%" height="15" fill="rgb(218,69,12)" fg:x="4517" fg:w="18"/><text x="89.5894%" y="143.50"></text></g><g><title>[libc.so.6] (18 samples, 0.36%)</title><rect x="89.3394%" y="117" width="0.3560%" height="15" fill="rgb(212,87,7)" fg:x="4517" fg:w="18"/><text x="89.5894%" y="127.50"></text></g><g><title>[libc.so.6] (14 samples, 0.28%)</title><rect x="89.4185%" y="101" width="0.2769%" height="15" fill="rgb(245,114,25)" fg:x="4521" fg:w="14"/><text x="89.6685%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.40%)</title><rect x="89.3196%" y="197" width="0.3956%" height="15" fill="rgb(210,61,42)" fg:x="4516" fg:w="20"/><text x="89.5696%" y="207.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="89.6954%" y="181" width="0.0198%" height="15" fill="rgb(211,52,33)" fg:x="4535" fg:w="1"/><text x="89.9454%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (26 samples, 0.51%)</title><rect x="89.2405%" y="229" width="0.5142%" height="15" fill="rgb(234,58,33)" fg:x="4512" fg:w="26"/><text x="89.4905%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.51%)</title><rect x="89.2405%" y="213" width="0.5142%" height="15" fill="rgb(220,115,36)" fg:x="4512" fg:w="26"/><text x="89.4905%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.04%)</title><rect x="89.7152%" y="197" width="0.0396%" height="15" fill="rgb(243,153,54)" fg:x="4536" fg:w="2"/><text x="89.9652%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (2 samples, 0.04%)</title><rect x="89.7152%" y="181" width="0.0396%" height="15" fill="rgb(251,47,18)" fg:x="4536" fg:w="2"/><text x="89.9652%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (2 samples, 0.04%)</title><rect x="89.7152%" y="165" width="0.0396%" height="15" fill="rgb(242,102,42)" fg:x="4536" fg:w="2"/><text x="89.9652%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (34 samples, 0.67%)</title><rect x="89.2009%" y="245" width="0.6725%" height="15" fill="rgb(234,31,38)" fg:x="4510" fg:w="34"/><text x="89.4509%" y="255.50"></text></g><g><title>core::ptr::write (6 samples, 0.12%)</title><rect x="89.7547%" y="229" width="0.1187%" height="15" fill="rgb(221,117,51)" fg:x="4538" fg:w="6"/><text x="90.0047%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="89.8734%" y="245" width="0.0198%" height="15" fill="rgb(212,20,18)" fg:x="4544" fg:w="1"/><text x="90.1234%" y="255.50"></text></g><g><title>chess::move_gen::direction_sliding (67 samples, 1.33%)</title><rect x="88.5878%" y="261" width="1.3252%" height="15" fill="rgb(245,133,36)" fg:x="4479" fg:w="67"/><text x="88.8378%" y="271.50"></text></g><g><title>chess::move_gen::direction_sliding (1 samples, 0.02%)</title><rect x="89.8932%" y="245" width="0.0198%" height="15" fill="rgb(212,6,19)" fg:x="4545" fg:w="1"/><text x="90.1432%" y="255.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="89.9130%" y="245" width="0.0198%" height="15" fill="rgb(218,1,36)" fg:x="4546" fg:w="1"/><text x="90.1630%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="89.9130%" y="229" width="0.0198%" height="15" fill="rgb(246,84,54)" fg:x="4546" fg:w="1"/><text x="90.1630%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="89.9130%" y="213" width="0.0198%" height="15" fill="rgb(242,110,6)" fg:x="4546" fg:w="1"/><text x="90.1630%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="89.9130%" y="197" width="0.0198%" height="15" fill="rgb(214,47,5)" fg:x="4546" fg:w="1"/><text x="90.1630%" y="207.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="89.9130%" y="181" width="0.0198%" height="15" fill="rgb(218,159,25)" fg:x="4546" fg:w="1"/><text x="90.1630%" y="191.50"></text></g><g><title>chess::move_gen::get_line (2 samples, 0.04%)</title><rect x="89.9130%" y="261" width="0.0396%" height="15" fill="rgb(215,211,28)" fg:x="4546" fg:w="2"/><text x="90.1630%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="89.9328%" y="245" width="0.0198%" height="15" fill="rgb(238,59,32)" fg:x="4547" fg:w="1"/><text x="90.1828%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="89.9328%" y="229" width="0.0198%" height="15" fill="rgb(226,82,3)" fg:x="4547" fg:w="1"/><text x="90.1828%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="89.9328%" y="213" width="0.0198%" height="15" fill="rgb(240,164,32)" fg:x="4547" fg:w="1"/><text x="90.1828%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="89.9328%" y="197" width="0.0198%" height="15" fill="rgb(232,46,7)" fg:x="4547" fg:w="1"/><text x="90.1828%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="90.1503%" y="245" width="0.0396%" height="15" fill="rgb(229,129,53)" fg:x="4558" fg:w="2"/><text x="90.4003%" y="255.50"></text></g><g><title>[libc.so.6] (5 samples, 0.10%)</title><rect x="90.1899%" y="245" width="0.0989%" height="15" fill="rgb(234,188,29)" fg:x="4560" fg:w="5"/><text x="90.4399%" y="255.50"></text></g><g><title>&lt;i8 as core::ops::arith::AddAssign&lt;&amp;i8&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="90.4074%" y="229" width="0.0198%" height="15" fill="rgb(246,141,4)" fg:x="4571" fg:w="1"/><text x="90.6574%" y="239.50"></text></g><g><title>&lt;i8 as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.02%)</title><rect x="90.4074%" y="213" width="0.0198%" height="15" fill="rgb(229,23,39)" fg:x="4571" fg:w="1"/><text x="90.6574%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="90.4272%" y="229" width="0.0198%" height="15" fill="rgb(206,12,3)" fg:x="4572" fg:w="1"/><text x="90.6772%" y="239.50"></text></g><g><title>chess::move_gen::direction_sliding (10 samples, 0.20%)</title><rect x="90.2888%" y="245" width="0.1978%" height="15" fill="rgb(252,226,20)" fg:x="4565" fg:w="10"/><text x="90.5388%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.04%)</title><rect x="90.4470%" y="229" width="0.0396%" height="15" fill="rgb(216,123,35)" fg:x="4573" fg:w="2"/><text x="90.6970%" y="239.50"></text></g><g><title>&lt;i8 as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.04%)</title><rect x="90.4470%" y="213" width="0.0396%" height="15" fill="rgb(212,68,40)" fg:x="4573" fg:w="2"/><text x="90.6970%" y="223.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.04%)</title><rect x="90.4470%" y="197" width="0.0396%" height="15" fill="rgb(254,125,32)" fg:x="4573" fg:w="2"/><text x="90.6970%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.04%)</title><rect x="90.4470%" y="181" width="0.0396%" height="15" fill="rgb(253,97,22)" fg:x="4573" fg:w="2"/><text x="90.6970%" y="191.50"></text></g><g><title>core::slice::memchr::memchr::{{closure}} (2 samples, 0.04%)</title><rect x="90.4470%" y="165" width="0.0396%" height="15" fill="rgb(241,101,14)" fg:x="4573" fg:w="2"/><text x="90.6970%" y="175.50"></text></g><g><title>chess::move_gen::get_direction (1 samples, 0.02%)</title><rect x="90.4866%" y="245" width="0.0198%" height="15" fill="rgb(238,103,29)" fg:x="4575" fg:w="1"/><text x="90.7366%" y="255.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.06%)</title><rect x="90.5063%" y="229" width="0.0593%" height="15" fill="rgb(233,195,47)" fg:x="4576" fg:w="3"/><text x="90.7563%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="90.5063%" y="213" width="0.0593%" height="15" fill="rgb(246,218,30)" fg:x="4576" fg:w="3"/><text x="90.7563%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.06%)</title><rect x="90.5063%" y="197" width="0.0593%" height="15" fill="rgb(219,145,47)" fg:x="4576" fg:w="3"/><text x="90.7563%" y="207.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="90.5063%" y="181" width="0.0593%" height="15" fill="rgb(243,12,26)" fg:x="4576" fg:w="3"/><text x="90.7563%" y="191.50"></text></g><g><title>malloc (3 samples, 0.06%)</title><rect x="90.5063%" y="165" width="0.0593%" height="15" fill="rgb(214,87,16)" fg:x="4576" fg:w="3"/><text x="90.7563%" y="175.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.04%)</title><rect x="90.5657%" y="181" width="0.0396%" height="15" fill="rgb(208,99,42)" fg:x="4579" fg:w="2"/><text x="90.8157%" y="191.50"></text></g><g><title>chess::move_gen::get_line (6 samples, 0.12%)</title><rect x="90.5063%" y="245" width="0.1187%" height="15" fill="rgb(253,99,2)" fg:x="4576" fg:w="6"/><text x="90.7563%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="90.5657%" y="229" width="0.0593%" height="15" fill="rgb(220,168,23)" fg:x="4579" fg:w="3"/><text x="90.8157%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="90.5657%" y="213" width="0.0593%" height="15" fill="rgb(242,38,24)" fg:x="4579" fg:w="3"/><text x="90.8157%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="90.5657%" y="197" width="0.0593%" height="15" fill="rgb(225,182,9)" fg:x="4579" fg:w="3"/><text x="90.8157%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="90.6052%" y="181" width="0.0198%" height="15" fill="rgb(243,178,37)" fg:x="4581" fg:w="1"/><text x="90.8552%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="90.6052%" y="165" width="0.0198%" height="15" fill="rgb(232,139,19)" fg:x="4581" fg:w="1"/><text x="90.8552%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="90.6052%" y="149" width="0.0198%" height="15" fill="rgb(225,201,24)" fg:x="4581" fg:w="1"/><text x="90.8552%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="90.6052%" y="133" width="0.0198%" height="15" fill="rgb(221,47,46)" fg:x="4581" fg:w="1"/><text x="90.8552%" y="143.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="90.6052%" y="117" width="0.0198%" height="15" fill="rgb(249,23,13)" fg:x="4581" fg:w="1"/><text x="90.8552%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="90.6052%" y="101" width="0.0198%" height="15" fill="rgb(219,9,5)" fg:x="4581" fg:w="1"/><text x="90.8552%" y="111.50"></text></g><g><title>chess::move_gen::pawn_moves (1 samples, 0.02%)</title><rect x="90.6250%" y="245" width="0.0198%" height="15" fill="rgb(254,171,16)" fg:x="4582" fg:w="1"/><text x="90.8750%" y="255.50"></text></g><g><title>chess::piece::PieceList::add_piece (2 samples, 0.04%)</title><rect x="90.6448%" y="245" width="0.0396%" height="15" fill="rgb(230,171,20)" fg:x="4583" fg:w="2"/><text x="90.8948%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="90.6646%" y="229" width="0.0198%" height="15" fill="rgb(210,71,41)" fg:x="4584" fg:w="1"/><text x="90.9146%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="90.6646%" y="213" width="0.0198%" height="15" fill="rgb(206,173,20)" fg:x="4584" fg:w="1"/><text x="90.9146%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="90.6646%" y="197" width="0.0198%" height="15" fill="rgb(233,88,34)" fg:x="4584" fg:w="1"/><text x="90.9146%" y="207.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="90.6646%" y="181" width="0.0198%" height="15" fill="rgb(223,209,46)" fg:x="4584" fg:w="1"/><text x="90.9146%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="90.6843%" y="245" width="0.0198%" height="15" fill="rgb(250,43,18)" fg:x="4585" fg:w="1"/><text x="90.9343%" y="255.50"></text></g><g><title>chess::move_gen::get_pinned_pieces (39 samples, 0.77%)</title><rect x="89.9525%" y="261" width="0.7714%" height="15" fill="rgb(208,13,10)" fg:x="4548" fg:w="39"/><text x="90.2025%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i8&gt;&gt; (1 samples, 0.02%)</title><rect x="90.7041%" y="245" width="0.0198%" height="15" fill="rgb(212,200,36)" fg:x="4586" fg:w="1"/><text x="90.9541%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i8&gt;&gt; (1 samples, 0.02%)</title><rect x="90.7041%" y="229" width="0.0198%" height="15" fill="rgb(225,90,30)" fg:x="4586" fg:w="1"/><text x="90.9541%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="90.7041%" y="213" width="0.0198%" height="15" fill="rgb(236,182,39)" fg:x="4586" fg:w="1"/><text x="90.9541%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="90.7041%" y="197" width="0.0198%" height="15" fill="rgb(212,144,35)" fg:x="4586" fg:w="1"/><text x="90.9541%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="90.7041%" y="181" width="0.0198%" height="15" fill="rgb(228,63,44)" fg:x="4586" fg:w="1"/><text x="90.9541%" y="191.50"></text></g><g><title>free (1 samples, 0.02%)</title><rect x="90.7041%" y="165" width="0.0198%" height="15" fill="rgb(228,109,6)" fg:x="4586" fg:w="1"/><text x="90.9541%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="90.7041%" y="149" width="0.0198%" height="15" fill="rgb(238,117,24)" fg:x="4586" fg:w="1"/><text x="90.9541%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.10%)</title><rect x="90.9612%" y="245" width="0.0989%" height="15" fill="rgb(242,26,26)" fg:x="4599" fg:w="5"/><text x="91.2112%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="90.9810%" y="229" width="0.0791%" height="15" fill="rgb(221,92,48)" fg:x="4600" fg:w="4"/><text x="91.2310%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.08%)</title><rect x="90.9810%" y="213" width="0.0791%" height="15" fill="rgb(209,209,32)" fg:x="4600" fg:w="4"/><text x="91.2310%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.08%)</title><rect x="90.9810%" y="197" width="0.0791%" height="15" fill="rgb(221,70,22)" fg:x="4600" fg:w="4"/><text x="91.2310%" y="207.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="91.0403%" y="181" width="0.0198%" height="15" fill="rgb(248,145,5)" fg:x="4603" fg:w="1"/><text x="91.2903%" y="191.50"></text></g><g><title>chess::move_gen::king_moves (19 samples, 0.38%)</title><rect x="90.7239%" y="261" width="0.3758%" height="15" fill="rgb(226,116,26)" fg:x="4587" fg:w="19"/><text x="90.9739%" y="271.50"></text></g><g><title>chess::move_gen::king_moves (2 samples, 0.04%)</title><rect x="91.0601%" y="245" width="0.0396%" height="15" fill="rgb(244,5,17)" fg:x="4604" fg:w="2"/><text x="91.3101%" y="255.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="91.3370%" y="197" width="0.0198%" height="15" fill="rgb(252,159,33)" fg:x="4618" fg:w="1"/><text x="91.5870%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="91.3568%" y="197" width="0.0198%" height="15" fill="rgb(206,71,0)" fg:x="4619" fg:w="1"/><text x="91.6068%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="91.3766%" y="181" width="0.0396%" height="15" fill="rgb(233,118,54)" fg:x="4620" fg:w="2"/><text x="91.6266%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="91.3766%" y="165" width="0.0396%" height="15" fill="rgb(234,83,48)" fg:x="4620" fg:w="2"/><text x="91.6266%" y="175.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="91.3766%" y="149" width="0.0396%" height="15" fill="rgb(228,3,54)" fg:x="4620" fg:w="2"/><text x="91.6266%" y="159.50"></text></g><g><title>realloc (2 samples, 0.04%)</title><rect x="91.3766%" y="133" width="0.0396%" height="15" fill="rgb(226,155,13)" fg:x="4620" fg:w="2"/><text x="91.6266%" y="143.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="91.3766%" y="117" width="0.0396%" height="15" fill="rgb(241,28,37)" fg:x="4620" fg:w="2"/><text x="91.6266%" y="127.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="91.3766%" y="101" width="0.0396%" height="15" fill="rgb(233,93,10)" fg:x="4620" fg:w="2"/><text x="91.6266%" y="111.50"></text></g><g><title>chess::move_gen::knight_moves (17 samples, 0.34%)</title><rect x="91.0997%" y="261" width="0.3362%" height="15" fill="rgb(225,113,19)" fg:x="4606" fg:w="17"/><text x="91.3497%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.10%)</title><rect x="91.3370%" y="245" width="0.0989%" height="15" fill="rgb(241,2,18)" fg:x="4618" fg:w="5"/><text x="91.5870%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.10%)</title><rect x="91.3370%" y="229" width="0.0989%" height="15" fill="rgb(228,207,21)" fg:x="4618" fg:w="5"/><text x="91.5870%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.10%)</title><rect x="91.3370%" y="213" width="0.0989%" height="15" fill="rgb(213,211,35)" fg:x="4618" fg:w="5"/><text x="91.5870%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="91.3766%" y="197" width="0.0593%" height="15" fill="rgb(209,83,10)" fg:x="4620" fg:w="3"/><text x="91.6266%" y="207.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="91.4161%" y="181" width="0.0198%" height="15" fill="rgb(209,164,1)" fg:x="4622" fg:w="1"/><text x="91.6661%" y="191.50"></text></g><g><title>chess::move_gen::move_gen (5 samples, 0.10%)</title><rect x="91.4359%" y="261" width="0.0989%" height="15" fill="rgb(213,184,43)" fg:x="4623" fg:w="5"/><text x="91.6859%" y="271.50"></text></g><g><title>free (1 samples, 0.02%)</title><rect x="91.5150%" y="245" width="0.0198%" height="15" fill="rgb(231,61,34)" fg:x="4627" fg:w="1"/><text x="91.7650%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="91.5150%" y="229" width="0.0198%" height="15" fill="rgb(235,75,3)" fg:x="4627" fg:w="1"/><text x="91.7650%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="91.6930%" y="197" width="0.0396%" height="15" fill="rgb(220,106,47)" fg:x="4636" fg:w="2"/><text x="91.9430%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.10%)</title><rect x="91.7326%" y="181" width="0.0989%" height="15" fill="rgb(210,196,33)" fg:x="4638" fg:w="5"/><text x="91.9826%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.10%)</title><rect x="91.7326%" y="165" width="0.0989%" height="15" fill="rgb(229,154,42)" fg:x="4638" fg:w="5"/><text x="91.9826%" y="175.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.10%)</title><rect x="91.7326%" y="149" width="0.0989%" height="15" fill="rgb(228,114,26)" fg:x="4638" fg:w="5"/><text x="91.9826%" y="159.50"></text></g><g><title>realloc (5 samples, 0.10%)</title><rect x="91.7326%" y="133" width="0.0989%" height="15" fill="rgb(208,144,1)" fg:x="4638" fg:w="5"/><text x="91.9826%" y="143.50"></text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="91.7722%" y="117" width="0.0593%" height="15" fill="rgb(239,112,37)" fg:x="4640" fg:w="3"/><text x="92.0222%" y="127.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="91.7919%" y="101" width="0.0396%" height="15" fill="rgb(210,96,50)" fg:x="4641" fg:w="2"/><text x="92.0419%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.12%)</title><rect x="91.7326%" y="197" width="0.1187%" height="15" fill="rgb(222,178,2)" fg:x="4638" fg:w="6"/><text x="91.9826%" y="207.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="91.8315%" y="181" width="0.0198%" height="15" fill="rgb(226,74,18)" fg:x="4643" fg:w="1"/><text x="92.0815%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.20%)</title><rect x="91.6930%" y="229" width="0.1978%" height="15" fill="rgb(225,67,54)" fg:x="4636" fg:w="10"/><text x="91.9430%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.20%)</title><rect x="91.6930%" y="213" width="0.1978%" height="15" fill="rgb(251,92,32)" fg:x="4636" fg:w="10"/><text x="91.9430%" y="223.50"></text></g><g><title>core::cmp::max (2 samples, 0.04%)</title><rect x="91.8513%" y="197" width="0.0396%" height="15" fill="rgb(228,149,22)" fg:x="4644" fg:w="2"/><text x="92.1013%" y="207.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.04%)</title><rect x="91.8513%" y="181" width="0.0396%" height="15" fill="rgb(243,54,13)" fg:x="4644" fg:w="2"/><text x="92.1013%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="91.8513%" y="165" width="0.0396%" height="15" fill="rgb(243,180,28)" fg:x="4644" fg:w="2"/><text x="92.1013%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.24%)</title><rect x="91.6930%" y="245" width="0.2373%" height="15" fill="rgb(208,167,24)" fg:x="4636" fg:w="12"/><text x="91.9430%" y="255.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="91.8908%" y="229" width="0.0396%" height="15" fill="rgb(245,73,45)" fg:x="4646" fg:w="2"/><text x="92.1408%" y="239.50"></text></g><g><title>chess::move_gen::discover_check (1 samples, 0.02%)</title><rect x="91.9304%" y="245" width="0.0198%" height="15" fill="rgb(237,203,48)" fg:x="4648" fg:w="1"/><text x="92.1804%" y="255.50"></text></g><g><title>chess::attack_gen::direction_sliding (1 samples, 0.02%)</title><rect x="91.9304%" y="229" width="0.0198%" height="15" fill="rgb(211,197,16)" fg:x="4648" fg:w="1"/><text x="92.1804%" y="239.50"></text></g><g><title>chess::move_gen::discover_check (1 samples, 0.02%)</title><rect x="91.9304%" y="213" width="0.0198%" height="15" fill="rgb(243,99,51)" fg:x="4648" fg:w="1"/><text x="92.1804%" y="223.50"></text></g><g><title>chess::move_gen::pawn_moves (22 samples, 0.44%)</title><rect x="91.5348%" y="261" width="0.4351%" height="15" fill="rgb(215,123,29)" fg:x="4628" fg:w="22"/><text x="91.7848%" y="271.50"></text></g><g><title>chess::move_gen::is_pawn_move (1 samples, 0.02%)</title><rect x="91.9502%" y="245" width="0.0198%" height="15" fill="rgb(239,186,37)" fg:x="4649" fg:w="1"/><text x="92.2002%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="92.0688%" y="245" width="0.0198%" height="15" fill="rgb(252,136,39)" fg:x="4655" fg:w="1"/><text x="92.3188%" y="255.50"></text></g><g><title>chess::piece::PieceList::add (7 samples, 0.14%)</title><rect x="91.9699%" y="261" width="0.1384%" height="15" fill="rgb(223,213,32)" fg:x="4650" fg:w="7"/><text x="92.2199%" y="271.50"></text></g><g><title>chess::piece::PieceList::add_piece (1 samples, 0.02%)</title><rect x="92.0886%" y="245" width="0.0198%" height="15" fill="rgb(233,115,5)" fg:x="4656" fg:w="1"/><text x="92.3386%" y="255.50"></text></g><g><title>chess::piece::PieceList::diference (3 samples, 0.06%)</title><rect x="92.1084%" y="261" width="0.0593%" height="15" fill="rgb(207,226,44)" fg:x="4657" fg:w="3"/><text x="92.3584%" y="271.50"></text></g><g><title>chess::piece::PieceList::remove (2 samples, 0.04%)</title><rect x="92.1282%" y="245" width="0.0396%" height="15" fill="rgb(208,126,0)" fg:x="4658" fg:w="2"/><text x="92.3782%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.02%)</title><rect x="92.1479%" y="229" width="0.0198%" height="15" fill="rgb(244,66,21)" fg:x="4659" fg:w="1"/><text x="92.3979%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chess::move_gen::Move&gt;&gt; (7 samples, 0.14%)</title><rect x="92.1677%" y="261" width="0.1384%" height="15" fill="rgb(222,97,12)" fg:x="4660" fg:w="7"/><text x="92.4177%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chess::move_gen::Move&gt;&gt; (7 samples, 0.14%)</title><rect x="92.1677%" y="245" width="0.1384%" height="15" fill="rgb(219,213,19)" fg:x="4660" fg:w="7"/><text x="92.4177%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect x="92.1677%" y="229" width="0.1384%" height="15" fill="rgb(252,169,30)" fg:x="4660" fg:w="7"/><text x="92.4177%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.14%)</title><rect x="92.1677%" y="213" width="0.1384%" height="15" fill="rgb(206,32,51)" fg:x="4660" fg:w="7"/><text x="92.4177%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.14%)</title><rect x="92.1677%" y="197" width="0.1384%" height="15" fill="rgb(250,172,42)" fg:x="4660" fg:w="7"/><text x="92.4177%" y="207.50"></text></g><g><title>free (7 samples, 0.14%)</title><rect x="92.1677%" y="181" width="0.1384%" height="15" fill="rgb(209,34,43)" fg:x="4660" fg:w="7"/><text x="92.4177%" y="191.50"></text></g><g><title>[libc.so.6] (5 samples, 0.10%)</title><rect x="92.2073%" y="165" width="0.0989%" height="15" fill="rgb(223,11,35)" fg:x="4662" fg:w="5"/><text x="92.4573%" y="175.50"></text></g><g><title>chess::move_gen::move_gen (303 samples, 5.99%)</title><rect x="86.3331%" y="277" width="5.9929%" height="15" fill="rgb(251,219,26)" fg:x="4365" fg:w="303"/><text x="86.5831%" y="287.50">chess::m..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i8&gt;&gt; (1 samples, 0.02%)</title><rect x="92.3062%" y="261" width="0.0198%" height="15" fill="rgb(231,119,3)" fg:x="4667" fg:w="1"/><text x="92.5562%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i8&gt;&gt; (1 samples, 0.02%)</title><rect x="92.3062%" y="245" width="0.0198%" height="15" fill="rgb(216,97,11)" fg:x="4667" fg:w="1"/><text x="92.5562%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="92.3062%" y="229" width="0.0198%" height="15" fill="rgb(223,59,9)" fg:x="4667" fg:w="1"/><text x="92.5562%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="92.3062%" y="213" width="0.0198%" height="15" fill="rgb(233,93,31)" fg:x="4667" fg:w="1"/><text x="92.5562%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="92.3062%" y="197" width="0.0198%" height="15" fill="rgb(239,81,33)" fg:x="4667" fg:w="1"/><text x="92.5562%" y="207.50"></text></g><g><title>free (1 samples, 0.02%)</title><rect x="92.3062%" y="181" width="0.0198%" height="15" fill="rgb(213,120,34)" fg:x="4667" fg:w="1"/><text x="92.5562%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (5 samples, 0.10%)</title><rect x="92.8600%" y="261" width="0.0989%" height="15" fill="rgb(243,49,53)" fg:x="4695" fg:w="5"/><text x="93.1100%" y="271.50"></text></g><g><title>core::ptr::read (3 samples, 0.06%)</title><rect x="92.8995%" y="245" width="0.0593%" height="15" fill="rgb(247,216,33)" fg:x="4697" fg:w="3"/><text x="93.1495%" y="255.50"></text></g><g><title>chess::piece::PieceList::add_piece (2 samples, 0.04%)</title><rect x="92.9589%" y="261" width="0.0396%" height="15" fill="rgb(226,26,14)" fg:x="4700" fg:w="2"/><text x="93.2089%" y="271.50"></text></g><g><title>chess::piece::PieceList::make_move (16 samples, 0.32%)</title><rect x="92.9984%" y="261" width="0.3165%" height="15" fill="rgb(215,49,53)" fg:x="4702" fg:w="16"/><text x="93.2484%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="93.2951%" y="245" width="0.0198%" height="15" fill="rgb(245,162,40)" fg:x="4717" fg:w="1"/><text x="93.5451%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="93.2951%" y="229" width="0.0198%" height="15" fill="rgb(229,68,17)" fg:x="4717" fg:w="1"/><text x="93.5451%" y="239.50"></text></g><g><title>chess::unmake::unmake_move (16 samples, 0.32%)</title><rect x="93.3149%" y="261" width="0.3165%" height="15" fill="rgb(213,182,10)" fg:x="4718" fg:w="16"/><text x="93.5649%" y="271.50"></text></g><g><title>chess::zobrist_hashing::HashingNumbers::hash_move (15 samples, 0.30%)</title><rect x="93.3347%" y="245" width="0.2967%" height="15" fill="rgb(245,125,30)" fg:x="4719" fg:w="15"/><text x="93.5847%" y="255.50"></text></g><g><title>chess::zobrist_hashing::Hash::hash_move (8 samples, 0.16%)</title><rect x="93.6313%" y="261" width="0.1582%" height="15" fill="rgb(232,202,2)" fg:x="4734" fg:w="8"/><text x="93.8813%" y="271.50"></text></g><g><title>chess::api::board120_to_board64 (7 samples, 0.14%)</title><rect x="93.6511%" y="245" width="0.1384%" height="15" fill="rgb(237,140,51)" fg:x="4735" fg:w="7"/><text x="93.9011%" y="255.50"></text></g><g><title>chess::zobrist_hashing::Hash::hash_turn (1 samples, 0.02%)</title><rect x="93.7896%" y="261" width="0.0198%" height="15" fill="rgb(236,157,25)" fg:x="4742" fg:w="1"/><text x="94.0396%" y="271.50"></text></g><g><title>chess::alpha_beta_search::alpha_beta_min_with_memory (4,013 samples, 79.37%)</title><rect x="14.4581%" y="293" width="79.3710%" height="15" fill="rgb(219,209,0)" fg:x="731" fg:w="4013"/><text x="14.7081%" y="303.50">chess::alpha_beta_search::alpha_beta_min_with_memory</text></g><g><title>chess::unmake::unmake_move (76 samples, 1.50%)</title><rect x="92.3259%" y="277" width="1.5032%" height="15" fill="rgb(240,116,54)" fg:x="4668" fg:w="76"/><text x="92.5759%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (1 samples, 0.02%)</title><rect x="93.8093%" y="261" width="0.0198%" height="15" fill="rgb(216,10,36)" fg:x="4743" fg:w="1"/><text x="94.0593%" y="271.50"></text></g><g><title>chess::make_move::aux (3 samples, 0.06%)</title><rect x="93.8687%" y="277" width="0.0593%" height="15" fill="rgb(222,72,44)" fg:x="4746" fg:w="3"/><text x="94.1187%" y="287.50"></text></g><g><title>chess::zobrist_hashing::HashingNumbers::hash_move (3 samples, 0.06%)</title><rect x="93.8687%" y="261" width="0.0593%" height="15" fill="rgb(232,159,9)" fg:x="4746" fg:w="3"/><text x="94.1187%" y="271.50"></text></g><g><title>chess::make_move::update_game_state (7 samples, 0.14%)</title><rect x="93.9280%" y="277" width="0.1384%" height="15" fill="rgb(210,39,32)" fg:x="4749" fg:w="7"/><text x="94.1780%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.08%)</title><rect x="93.9873%" y="261" width="0.0791%" height="15" fill="rgb(216,194,45)" fg:x="4752" fg:w="4"/><text x="94.2373%" y="271.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="94.0269%" y="245" width="0.0396%" height="15" fill="rgb(218,18,35)" fg:x="4754" fg:w="2"/><text x="94.2769%" y="255.50"></text></g><g><title>chess::make_move::aux (13 samples, 0.26%)</title><rect x="93.8291%" y="293" width="0.2571%" height="15" fill="rgb(207,83,51)" fg:x="4744" fg:w="13"/><text x="94.0791%" y="303.50"></text></g><g><title>chess::zobrist_hashing::HashingNumbers::hash_move (1 samples, 0.02%)</title><rect x="94.0665%" y="277" width="0.0198%" height="15" fill="rgb(225,63,43)" fg:x="4756" fg:w="1"/><text x="94.3165%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="94.0862%" y="181" width="0.0593%" height="15" fill="rgb(207,57,36)" fg:x="4757" fg:w="3"/><text x="94.3362%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.06%)</title><rect x="94.0862%" y="165" width="0.0593%" height="15" fill="rgb(216,99,33)" fg:x="4757" fg:w="3"/><text x="94.3362%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.06%)</title><rect x="94.0862%" y="149" width="0.0593%" height="15" fill="rgb(225,42,16)" fg:x="4757" fg:w="3"/><text x="94.3362%" y="159.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.06%)</title><rect x="94.0862%" y="133" width="0.0593%" height="15" fill="rgb(220,201,45)" fg:x="4757" fg:w="3"/><text x="94.3362%" y="143.50"></text></g><g><title>realloc (3 samples, 0.06%)</title><rect x="94.0862%" y="117" width="0.0593%" height="15" fill="rgb(225,33,4)" fg:x="4757" fg:w="3"/><text x="94.3362%" y="127.50"></text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="94.0862%" y="101" width="0.0593%" height="15" fill="rgb(224,33,50)" fg:x="4757" fg:w="3"/><text x="94.3362%" y="111.50"></text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="94.0862%" y="85" width="0.0593%" height="15" fill="rgb(246,198,51)" fg:x="4757" fg:w="3"/><text x="94.3362%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.08%)</title><rect x="94.0862%" y="245" width="0.0791%" height="15" fill="rgb(205,22,4)" fg:x="4757" fg:w="4"/><text x="94.3362%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.08%)</title><rect x="94.0862%" y="229" width="0.0791%" height="15" fill="rgb(206,3,8)" fg:x="4757" fg:w="4"/><text x="94.3362%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.08%)</title><rect x="94.0862%" y="213" width="0.0791%" height="15" fill="rgb(251,23,15)" fg:x="4757" fg:w="4"/><text x="94.3362%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.08%)</title><rect x="94.0862%" y="197" width="0.0791%" height="15" fill="rgb(252,88,28)" fg:x="4757" fg:w="4"/><text x="94.3362%" y="207.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="94.1456%" y="181" width="0.0198%" height="15" fill="rgb(212,127,14)" fg:x="4760" fg:w="1"/><text x="94.3956%" y="191.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="94.1456%" y="165" width="0.0198%" height="15" fill="rgb(247,145,37)" fg:x="4760" fg:w="1"/><text x="94.3956%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="94.1456%" y="149" width="0.0198%" height="15" fill="rgb(209,117,53)" fg:x="4760" fg:w="1"/><text x="94.3956%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (5 samples, 0.10%)</title><rect x="94.0862%" y="277" width="0.0989%" height="15" fill="rgb(212,90,42)" fg:x="4757" fg:w="5"/><text x="94.3362%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.10%)</title><rect x="94.0862%" y="261" width="0.0989%" height="15" fill="rgb(218,164,37)" fg:x="4757" fg:w="5"/><text x="94.3362%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="94.1653%" y="245" width="0.0198%" height="15" fill="rgb(246,65,34)" fg:x="4761" fg:w="1"/><text x="94.4153%" y="255.50"></text></g><g><title>chess::attack_gen::attack_gen (2 samples, 0.04%)</title><rect x="94.1851%" y="261" width="0.0396%" height="15" fill="rgb(231,100,33)" fg:x="4762" fg:w="2"/><text x="94.4351%" y="271.50"></text></g><g><title>chess::attack_gen::direction_sliding (1 samples, 0.02%)</title><rect x="94.2247%" y="261" width="0.0198%" height="15" fill="rgb(228,126,14)" fg:x="4764" fg:w="1"/><text x="94.4747%" y="271.50"></text></g><g><title>chess::attack_gen::attack_gen (4 samples, 0.08%)</title><rect x="94.1851%" y="277" width="0.0791%" height="15" fill="rgb(215,173,21)" fg:x="4762" fg:w="4"/><text x="94.4351%" y="287.50"></text></g><g><title>chess::attack_gen::king_moves (1 samples, 0.02%)</title><rect x="94.2445%" y="261" width="0.0198%" height="15" fill="rgb(210,6,40)" fg:x="4765" fg:w="1"/><text x="94.4945%" y="271.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="94.3236%" y="149" width="0.0198%" height="15" fill="rgb(212,48,18)" fg:x="4769" fg:w="1"/><text x="94.5736%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="94.3236%" y="197" width="0.0396%" height="15" fill="rgb(230,214,11)" fg:x="4769" fg:w="2"/><text x="94.5736%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="94.3236%" y="181" width="0.0396%" height="15" fill="rgb(254,105,39)" fg:x="4769" fg:w="2"/><text x="94.5736%" y="191.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="94.3236%" y="165" width="0.0396%" height="15" fill="rgb(245,158,5)" fg:x="4769" fg:w="2"/><text x="94.5736%" y="175.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="94.3434%" y="149" width="0.0198%" height="15" fill="rgb(249,208,11)" fg:x="4770" fg:w="1"/><text x="94.5934%" y="159.50"></text></g><g><title>chess::move_gen::direction_sliding (6 samples, 0.12%)</title><rect x="94.2642%" y="277" width="0.1187%" height="15" fill="rgb(210,39,28)" fg:x="4766" fg:w="6"/><text x="94.5142%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.08%)</title><rect x="94.3038%" y="261" width="0.0791%" height="15" fill="rgb(211,56,53)" fg:x="4768" fg:w="4"/><text x="94.5538%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.06%)</title><rect x="94.3236%" y="245" width="0.0593%" height="15" fill="rgb(226,201,30)" fg:x="4769" fg:w="3"/><text x="94.5736%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="94.3236%" y="229" width="0.0593%" height="15" fill="rgb(239,101,34)" fg:x="4769" fg:w="3"/><text x="94.5736%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="94.3236%" y="213" width="0.0593%" height="15" fill="rgb(226,209,5)" fg:x="4769" fg:w="3"/><text x="94.5736%" y="223.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="94.3631%" y="197" width="0.0198%" height="15" fill="rgb(250,105,47)" fg:x="4771" fg:w="1"/><text x="94.6131%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="94.4027%" y="261" width="0.0198%" height="15" fill="rgb(230,72,3)" fg:x="4773" fg:w="1"/><text x="94.6527%" y="271.50"></text></g><g><title>chess::move_gen::get_pinned_pieces (3 samples, 0.06%)</title><rect x="94.3829%" y="277" width="0.0593%" height="15" fill="rgb(232,218,39)" fg:x="4772" fg:w="3"/><text x="94.6329%" y="287.50"></text></g><g><title>chess::piece::PieceList::add_piece (1 samples, 0.02%)</title><rect x="94.4225%" y="261" width="0.0198%" height="15" fill="rgb(248,166,6)" fg:x="4774" fg:w="1"/><text x="94.6725%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="94.4225%" y="245" width="0.0198%" height="15" fill="rgb(247,89,20)" fg:x="4774" fg:w="1"/><text x="94.6725%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="94.4225%" y="229" width="0.0198%" height="15" fill="rgb(248,130,54)" fg:x="4774" fg:w="1"/><text x="94.6725%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="94.4225%" y="213" width="0.0198%" height="15" fill="rgb(234,196,4)" fg:x="4774" fg:w="1"/><text x="94.6725%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="94.4225%" y="197" width="0.0198%" height="15" fill="rgb(250,143,31)" fg:x="4774" fg:w="1"/><text x="94.6725%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="94.4422%" y="261" width="0.0198%" height="15" fill="rgb(211,110,34)" fg:x="4775" fg:w="1"/><text x="94.6922%" y="271.50"></text></g><g><title>chess::move_gen::king_moves (2 samples, 0.04%)</title><rect x="94.4422%" y="277" width="0.0396%" height="15" fill="rgb(215,124,48)" fg:x="4775" fg:w="2"/><text x="94.6922%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="94.4620%" y="261" width="0.0198%" height="15" fill="rgb(216,46,13)" fg:x="4776" fg:w="1"/><text x="94.7120%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="94.4620%" y="245" width="0.0198%" height="15" fill="rgb(205,184,25)" fg:x="4776" fg:w="1"/><text x="94.7120%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="94.4620%" y="229" width="0.0198%" height="15" fill="rgb(228,1,10)" fg:x="4776" fg:w="1"/><text x="94.7120%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="94.4620%" y="213" width="0.0198%" height="15" fill="rgb(213,116,27)" fg:x="4776" fg:w="1"/><text x="94.7120%" y="223.50"></text></g><g><title>chess::move_gen::move_gen (1 samples, 0.02%)</title><rect x="94.4818%" y="277" width="0.0198%" height="15" fill="rgb(241,95,50)" fg:x="4777" fg:w="1"/><text x="94.7318%" y="287.50"></text></g><g><title>chess::move_gen::move_gen (22 samples, 0.44%)</title><rect x="94.0862%" y="293" width="0.4351%" height="15" fill="rgb(238,48,32)" fg:x="4757" fg:w="22"/><text x="94.3362%" y="303.50"></text></g><g><title>chess::move_gen::pawn_moves (1 samples, 0.02%)</title><rect x="94.5016%" y="277" width="0.0198%" height="15" fill="rgb(235,113,49)" fg:x="4778" fg:w="1"/><text x="94.7516%" y="287.50"></text></g><g><title>chess::piece::PieceList::add_piece (1 samples, 0.02%)</title><rect x="94.7191%" y="277" width="0.0198%" height="15" fill="rgb(205,127,43)" fg:x="4789" fg:w="1"/><text x="94.9691%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="94.7191%" y="261" width="0.0198%" height="15" fill="rgb(250,162,2)" fg:x="4789" fg:w="1"/><text x="94.9691%" y="271.50"></text></g><g><title>chess::piece::PieceList::make_move (3 samples, 0.06%)</title><rect x="94.7389%" y="277" width="0.0593%" height="15" fill="rgb(220,13,41)" fg:x="4790" fg:w="3"/><text x="94.9889%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.04%)</title><rect x="94.7587%" y="261" width="0.0396%" height="15" fill="rgb(249,221,25)" fg:x="4791" fg:w="2"/><text x="95.0087%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.04%)</title><rect x="94.7587%" y="245" width="0.0396%" height="15" fill="rgb(215,208,19)" fg:x="4791" fg:w="2"/><text x="95.0087%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.04%)</title><rect x="94.7587%" y="229" width="0.0396%" height="15" fill="rgb(236,175,2)" fg:x="4791" fg:w="2"/><text x="95.0087%" y="239.50"></text></g><g><title>chess::unmake::unmake_move (5 samples, 0.10%)</title><rect x="94.7983%" y="277" width="0.0989%" height="15" fill="rgb(241,52,2)" fg:x="4793" fg:w="5"/><text x="95.0483%" y="287.50"></text></g><g><title>chess::zobrist_hashing::HashingNumbers::hash_move (5 samples, 0.10%)</title><rect x="94.7983%" y="261" width="0.0989%" height="15" fill="rgb(248,140,14)" fg:x="4793" fg:w="5"/><text x="95.0483%" y="271.50"></text></g><g><title>chess::unmake::unmake_move (20 samples, 0.40%)</title><rect x="94.5214%" y="293" width="0.3956%" height="15" fill="rgb(253,22,42)" fg:x="4779" fg:w="20"/><text x="94.7714%" y="303.50"></text></g><g><title>chess::zobrist_hashing::Hash::hash_move (1 samples, 0.02%)</title><rect x="94.8972%" y="277" width="0.0198%" height="15" fill="rgb(234,61,47)" fg:x="4798" fg:w="1"/><text x="95.1472%" y="287.50"></text></g><g><title>chess::api::board120_to_board64 (1 samples, 0.02%)</title><rect x="94.8972%" y="261" width="0.0198%" height="15" fill="rgb(208,226,15)" fg:x="4798" fg:w="1"/><text x="95.1472%" y="271.50"></text></g><g><title>chess::alpha_beta_search::alpha_beta_max_with_memory (4,079 samples, 80.68%)</title><rect x="14.3196%" y="309" width="80.6764%" height="15" fill="rgb(217,221,4)" fg:x="724" fg:w="4079"/><text x="14.5696%" y="319.50">chess::alpha_beta_search::alpha_beta_max_with_memory</text></g><g><title>free (4 samples, 0.08%)</title><rect x="94.9169%" y="293" width="0.0791%" height="15" fill="rgb(212,174,34)" fg:x="4799" fg:w="4"/><text x="95.1669%" y="303.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="94.9565%" y="277" width="0.0396%" height="15" fill="rgb(253,83,4)" fg:x="4801" fg:w="2"/><text x="95.2065%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="94.9763%" y="261" width="0.0198%" height="15" fill="rgb(250,195,49)" fg:x="4802" fg:w="1"/><text x="95.2263%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3 samples, 0.06%)</title><rect x="94.9960%" y="277" width="0.0593%" height="15" fill="rgb(241,192,25)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.06%)</title><rect x="94.9960%" y="261" width="0.0593%" height="15" fill="rgb(208,124,10)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="94.9960%" y="245" width="0.0593%" height="15" fill="rgb(222,33,0)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="94.9960%" y="229" width="0.0593%" height="15" fill="rgb(234,209,28)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.06%)</title><rect x="94.9960%" y="213" width="0.0593%" height="15" fill="rgb(224,11,23)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="94.9960%" y="197" width="0.0593%" height="15" fill="rgb(232,99,1)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="94.9960%" y="181" width="0.0593%" height="15" fill="rgb(237,95,45)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.06%)</title><rect x="94.9960%" y="165" width="0.0593%" height="15" fill="rgb(208,109,11)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.06%)</title><rect x="94.9960%" y="149" width="0.0593%" height="15" fill="rgb(216,190,48)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="159.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.06%)</title><rect x="94.9960%" y="133" width="0.0593%" height="15" fill="rgb(251,171,36)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="143.50"></text></g><g><title>realloc (3 samples, 0.06%)</title><rect x="94.9960%" y="117" width="0.0593%" height="15" fill="rgb(230,62,22)" fg:x="4803" fg:w="3"/><text x="95.2460%" y="127.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="95.0158%" y="101" width="0.0396%" height="15" fill="rgb(225,114,35)" fg:x="4804" fg:w="2"/><text x="95.2658%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="95.0356%" y="85" width="0.0198%" height="15" fill="rgb(215,118,42)" fg:x="4805" fg:w="1"/><text x="95.2856%" y="95.50"></text></g><g><title>chess::attack_gen::attack_gen (1 samples, 0.02%)</title><rect x="95.0554%" y="277" width="0.0198%" height="15" fill="rgb(243,119,21)" fg:x="4806" fg:w="1"/><text x="95.3054%" y="287.50"></text></g><g><title>chess::attack_gen::direction_sliding (1 samples, 0.02%)</title><rect x="95.0554%" y="261" width="0.0198%" height="15" fill="rgb(252,177,53)" fg:x="4806" fg:w="1"/><text x="95.3054%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="95.1147%" y="245" width="0.0396%" height="15" fill="rgb(237,209,29)" fg:x="4809" fg:w="2"/><text x="95.3647%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="95.1147%" y="229" width="0.0396%" height="15" fill="rgb(212,65,23)" fg:x="4809" fg:w="2"/><text x="95.3647%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="95.1147%" y="213" width="0.0396%" height="15" fill="rgb(230,222,46)" fg:x="4809" fg:w="2"/><text x="95.3647%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="95.1147%" y="197" width="0.0396%" height="15" fill="rgb(215,135,32)" fg:x="4809" fg:w="2"/><text x="95.3647%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="95.1147%" y="181" width="0.0396%" height="15" fill="rgb(246,101,22)" fg:x="4809" fg:w="2"/><text x="95.3647%" y="191.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="95.1147%" y="165" width="0.0396%" height="15" fill="rgb(206,107,13)" fg:x="4809" fg:w="2"/><text x="95.3647%" y="175.50"></text></g><g><title>realloc (2 samples, 0.04%)</title><rect x="95.1147%" y="149" width="0.0396%" height="15" fill="rgb(250,100,44)" fg:x="4809" fg:w="2"/><text x="95.3647%" y="159.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="95.1147%" y="133" width="0.0396%" height="15" fill="rgb(231,147,38)" fg:x="4809" fg:w="2"/><text x="95.3647%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="95.1345%" y="117" width="0.0198%" height="15" fill="rgb(229,8,40)" fg:x="4810" fg:w="1"/><text x="95.3845%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.06%)</title><rect x="95.1147%" y="261" width="0.0593%" height="15" fill="rgb(221,135,30)" fg:x="4809" fg:w="3"/><text x="95.3647%" y="271.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="95.1543%" y="245" width="0.0198%" height="15" fill="rgb(249,193,18)" fg:x="4811" fg:w="1"/><text x="95.4043%" y="255.50"></text></g><g><title>chess::move_gen::direction_sliding (6 samples, 0.12%)</title><rect x="95.0752%" y="277" width="0.1187%" height="15" fill="rgb(209,133,39)" fg:x="4807" fg:w="6"/><text x="95.3252%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="95.1741%" y="261" width="0.0198%" height="15" fill="rgb(232,100,14)" fg:x="4812" fg:w="1"/><text x="95.4241%" y="271.50"></text></g><g><title>chess::move_gen::get_pinned_pieces (1 samples, 0.02%)</title><rect x="95.1938%" y="277" width="0.0198%" height="15" fill="rgb(224,185,1)" fg:x="4813" fg:w="1"/><text x="95.4438%" y="287.50"></text></g><g><title>chess::move_gen::king_moves (1 samples, 0.02%)</title><rect x="95.2136%" y="277" width="0.0198%" height="15" fill="rgb(223,139,8)" fg:x="4814" fg:w="1"/><text x="95.4636%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="95.2729%" y="245" width="0.0198%" height="15" fill="rgb(232,213,38)" fg:x="4817" fg:w="1"/><text x="95.5229%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="95.2729%" y="229" width="0.0198%" height="15" fill="rgb(207,94,22)" fg:x="4817" fg:w="1"/><text x="95.5229%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="95.2729%" y="213" width="0.0198%" height="15" fill="rgb(219,183,54)" fg:x="4817" fg:w="1"/><text x="95.5229%" y="223.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="95.2729%" y="197" width="0.0198%" height="15" fill="rgb(216,185,54)" fg:x="4817" fg:w="1"/><text x="95.5229%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="95.2729%" y="261" width="0.0396%" height="15" fill="rgb(254,217,39)" fg:x="4817" fg:w="2"/><text x="95.5229%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="95.2927%" y="245" width="0.0198%" height="15" fill="rgb(240,178,23)" fg:x="4818" fg:w="1"/><text x="95.5427%" y="255.50"></text></g><g><title>chess::move_gen::move_gen (17 samples, 0.34%)</title><rect x="94.9960%" y="293" width="0.3362%" height="15" fill="rgb(218,11,47)" fg:x="4803" fg:w="17"/><text x="95.2460%" y="303.50"></text></g><g><title>chess::move_gen::pawn_moves (5 samples, 0.10%)</title><rect x="95.2334%" y="277" width="0.0989%" height="15" fill="rgb(218,51,51)" fg:x="4815" fg:w="5"/><text x="95.4834%" y="287.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.02%)</title><rect x="95.3125%" y="261" width="0.0198%" height="15" fill="rgb(238,126,27)" fg:x="4819" fg:w="1"/><text x="95.5625%" y="271.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.02%)</title><rect x="95.3125%" y="245" width="0.0198%" height="15" fill="rgb(249,202,22)" fg:x="4819" fg:w="1"/><text x="95.5625%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect x="95.3323%" y="229" width="0.0593%" height="15" fill="rgb(254,195,49)" fg:x="4820" fg:w="3"/><text x="95.5823%" y="239.50"></text></g><g><title>free (3 samples, 0.06%)</title><rect x="95.3323%" y="213" width="0.0593%" height="15" fill="rgb(208,123,14)" fg:x="4820" fg:w="3"/><text x="95.5823%" y="223.50"></text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="95.3323%" y="197" width="0.0593%" height="15" fill="rgb(224,200,8)" fg:x="4820" fg:w="3"/><text x="95.5823%" y="207.50"></text></g><g><title>[libc.so.6] (3 samples, 0.06%)</title><rect x="95.3323%" y="181" width="0.0593%" height="15" fill="rgb(217,61,36)" fg:x="4820" fg:w="3"/><text x="95.5823%" y="191.50"></text></g><g><title>chess::eval::eval (21 samples, 0.42%)</title><rect x="94.9960%" y="309" width="0.4153%" height="15" fill="rgb(206,35,45)" fg:x="4803" fg:w="21"/><text x="95.2460%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chess::move_gen::Move&gt;&gt; (4 samples, 0.08%)</title><rect x="95.3323%" y="293" width="0.0791%" height="15" fill="rgb(217,65,33)" fg:x="4820" fg:w="4"/><text x="95.5823%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chess::move_gen::Move&gt;&gt; (4 samples, 0.08%)</title><rect x="95.3323%" y="277" width="0.0791%" height="15" fill="rgb(222,158,48)" fg:x="4820" fg:w="4"/><text x="95.5823%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="95.3323%" y="261" width="0.0791%" height="15" fill="rgb(254,2,54)" fg:x="4820" fg:w="4"/><text x="95.5823%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.08%)</title><rect x="95.3323%" y="245" width="0.0791%" height="15" fill="rgb(250,143,38)" fg:x="4820" fg:w="4"/><text x="95.5823%" y="255.50"></text></g><g><title>chess::eval::eval (1 samples, 0.02%)</title><rect x="95.3916%" y="229" width="0.0198%" height="15" fill="rgb(248,25,0)" fg:x="4823" fg:w="1"/><text x="95.6416%" y="239.50"></text></g><g><title>chess::make_move::aux (1 samples, 0.02%)</title><rect x="95.4114%" y="309" width="0.0198%" height="15" fill="rgb(206,152,27)" fg:x="4824" fg:w="1"/><text x="95.6614%" y="319.50"></text></g><g><title>chess::make_move::update_game_state (1 samples, 0.02%)</title><rect x="95.4114%" y="293" width="0.0198%" height="15" fill="rgb(240,77,30)" fg:x="4824" fg:w="1"/><text x="95.6614%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="95.4114%" y="277" width="0.0198%" height="15" fill="rgb(231,5,3)" fg:x="4824" fg:w="1"/><text x="95.6614%" y="287.50"></text></g><g><title>chess::attack_gen::attack_gen (1 samples, 0.02%)</title><rect x="95.4312%" y="293" width="0.0198%" height="15" fill="rgb(207,226,32)" fg:x="4825" fg:w="1"/><text x="95.6812%" y="303.50"></text></g><g><title>chess::attack_gen::direction_sliding (1 samples, 0.02%)</title><rect x="95.4312%" y="277" width="0.0198%" height="15" fill="rgb(222,207,47)" fg:x="4825" fg:w="1"/><text x="95.6812%" y="287.50"></text></g><g><title>chess::move_gen::direction_sliding (3 samples, 0.06%)</title><rect x="95.4509%" y="293" width="0.0593%" height="15" fill="rgb(229,115,45)" fg:x="4826" fg:w="3"/><text x="95.7009%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="95.4707%" y="277" width="0.0396%" height="15" fill="rgb(224,191,6)" fg:x="4827" fg:w="2"/><text x="95.7207%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="95.4707%" y="261" width="0.0396%" height="15" fill="rgb(230,227,24)" fg:x="4827" fg:w="2"/><text x="95.7207%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="95.4707%" y="245" width="0.0396%" height="15" fill="rgb(228,80,19)" fg:x="4827" fg:w="2"/><text x="95.7207%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="95.4707%" y="229" width="0.0396%" height="15" fill="rgb(247,229,0)" fg:x="4827" fg:w="2"/><text x="95.7207%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="95.4905%" y="213" width="0.0198%" height="15" fill="rgb(237,194,15)" fg:x="4828" fg:w="1"/><text x="95.7405%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="95.4905%" y="197" width="0.0198%" height="15" fill="rgb(219,203,20)" fg:x="4828" fg:w="1"/><text x="95.7405%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="95.4905%" y="181" width="0.0198%" height="15" fill="rgb(234,128,8)" fg:x="4828" fg:w="1"/><text x="95.7405%" y="191.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="95.4905%" y="165" width="0.0198%" height="15" fill="rgb(248,202,8)" fg:x="4828" fg:w="1"/><text x="95.7405%" y="175.50"></text></g><g><title>chess::move_gen::king_moves (1 samples, 0.02%)</title><rect x="95.5103%" y="293" width="0.0198%" height="15" fill="rgb(206,104,37)" fg:x="4829" fg:w="1"/><text x="95.7603%" y="303.50"></text></g><g><title>chess::move_gen::move_gen (6 samples, 0.12%)</title><rect x="95.4312%" y="309" width="0.1187%" height="15" fill="rgb(223,8,27)" fg:x="4825" fg:w="6"/><text x="95.6812%" y="319.50"></text></g><g><title>chess::piece::PieceList::diference (1 samples, 0.02%)</title><rect x="95.5301%" y="293" width="0.0198%" height="15" fill="rgb(216,217,28)" fg:x="4830" fg:w="1"/><text x="95.7801%" y="303.50"></text></g><g><title>[prueba] (1 samples, 0.02%)</title><rect x="95.5301%" y="277" width="0.0198%" height="15" fill="rgb(249,199,1)" fg:x="4830" fg:w="1"/><text x="95.7801%" y="287.50"></text></g><g><title>chess::piece::PieceList::remove (1 samples, 0.02%)</title><rect x="95.5301%" y="261" width="0.0198%" height="15" fill="rgb(240,85,17)" fg:x="4830" fg:w="1"/><text x="95.7801%" y="271.50"></text></g><g><title>chess::alpha_beta_search::alpha_beta_min_with_memory (4,108 samples, 81.25%)</title><rect x="14.3196%" y="325" width="81.2500%" height="15" fill="rgb(206,108,45)" fg:x="724" fg:w="4108"/><text x="14.5696%" y="335.50">chess::alpha_beta_search::alpha_beta_min_with_memory</text></g><g><title>chess::unmake::unmake_move (1 samples, 0.02%)</title><rect x="95.5498%" y="309" width="0.0198%" height="15" fill="rgb(245,210,41)" fg:x="4831" fg:w="1"/><text x="95.7998%" y="319.50"></text></g><g><title>chess::piece::PieceList::add_piece (1 samples, 0.02%)</title><rect x="95.5498%" y="293" width="0.0198%" height="15" fill="rgb(206,13,37)" fg:x="4831" fg:w="1"/><text x="95.7998%" y="303.50"></text></g><g><title>chess::alpha_beta_search::get_best_iterative_deepening (4,313 samples, 85.30%)</title><rect x="10.2848%" y="357" width="85.3046%" height="15" fill="rgb(250,61,18)" fg:x="520" fg:w="4313"/><text x="10.5348%" y="367.50">chess::alpha_beta_search::get_best_iterative_deepening</text></g><g><title>chess::alpha_beta_search::alpha_beta_max_with_memory (4,109 samples, 81.27%)</title><rect x="14.3196%" y="341" width="81.2698%" height="15" fill="rgb(235,172,48)" fg:x="724" fg:w="4109"/><text x="14.5696%" y="351.50">chess::alpha_beta_search::alpha_beta_max_with_memory</text></g><g><title>chess::unmake::unmake_move (1 samples, 0.02%)</title><rect x="95.5696%" y="325" width="0.0198%" height="15" fill="rgb(249,201,17)" fg:x="4832" fg:w="1"/><text x="95.8196%" y="335.50"></text></g><g><title>chess::piece::PieceList::make_move (1 samples, 0.02%)</title><rect x="95.5696%" y="309" width="0.0198%" height="15" fill="rgb(219,208,6)" fg:x="4832" fg:w="1"/><text x="95.8196%" y="319.50"></text></g><g><title>_start (4,499 samples, 88.98%)</title><rect x="10.2848%" y="629" width="88.9834%" height="15" fill="rgb(248,31,23)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="639.50">_start</text></g><g><title>__libc_start_main (4,499 samples, 88.98%)</title><rect x="10.2848%" y="613" width="88.9834%" height="15" fill="rgb(245,15,42)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="623.50">__libc_start_main</text></g><g><title>[libc.so.6] (4,499 samples, 88.98%)</title><rect x="10.2848%" y="597" width="88.9834%" height="15" fill="rgb(222,217,39)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="607.50">[libc.so.6]</text></g><g><title>main (4,499 samples, 88.98%)</title><rect x="10.2848%" y="581" width="88.9834%" height="15" fill="rgb(210,219,27)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="591.50">main</text></g><g><title>std::rt::lang_start_internal (4,499 samples, 88.98%)</title><rect x="10.2848%" y="565" width="88.9834%" height="15" fill="rgb(252,166,36)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="575.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (4,499 samples, 88.98%)</title><rect x="10.2848%" y="549" width="88.9834%" height="15" fill="rgb(245,132,34)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="559.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,499 samples, 88.98%)</title><rect x="10.2848%" y="533" width="88.9834%" height="15" fill="rgb(236,54,3)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="543.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,499 samples, 88.98%)</title><rect x="10.2848%" y="517" width="88.9834%" height="15" fill="rgb(241,173,43)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="527.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (4,499 samples, 88.98%)</title><rect x="10.2848%" y="501" width="88.9834%" height="15" fill="rgb(215,190,9)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="511.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (4,499 samples, 88.98%)</title><rect x="10.2848%" y="485" width="88.9834%" height="15" fill="rgb(242,101,16)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="495.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,499 samples, 88.98%)</title><rect x="10.2848%" y="469" width="88.9834%" height="15" fill="rgb(223,190,21)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="479.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,499 samples, 88.98%)</title><rect x="10.2848%" y="453" width="88.9834%" height="15" fill="rgb(215,228,25)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="463.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4,499 samples, 88.98%)</title><rect x="10.2848%" y="437" width="88.9834%" height="15" fill="rgb(225,36,22)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="447.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (4,499 samples, 88.98%)</title><rect x="10.2848%" y="421" width="88.9834%" height="15" fill="rgb(251,106,46)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="431.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,499 samples, 88.98%)</title><rect x="10.2848%" y="405" width="88.9834%" height="15" fill="rgb(208,90,1)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="415.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (4,499 samples, 88.98%)</title><rect x="10.2848%" y="389" width="88.9834%" height="15" fill="rgb(243,10,4)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="399.50">core::ops::function::FnOnce::call_once</text></g><g><title>prueba::main (4,499 samples, 88.98%)</title><rect x="10.2848%" y="373" width="88.9834%" height="15" fill="rgb(212,137,27)" fg:x="520" fg:w="4499"/><text x="10.5348%" y="383.50">prueba::main</text></g><g><title>chess::fen_reader::read_fen (186 samples, 3.68%)</title><rect x="95.5894%" y="357" width="3.6788%" height="15" fill="rgb(231,220,49)" fg:x="4833" fg:w="186"/><text x="95.8394%" y="367.50">ches..</text></g><g><title>alloc::vec::from_elem (186 samples, 3.68%)</title><rect x="95.5894%" y="341" width="3.6788%" height="15" fill="rgb(237,96,20)" fg:x="4833" fg:w="186"/><text x="95.8394%" y="351.50">allo..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (186 samples, 3.68%)</title><rect x="95.5894%" y="325" width="3.6788%" height="15" fill="rgb(239,229,30)" fg:x="4833" fg:w="186"/><text x="95.8394%" y="335.50">&lt;T a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (186 samples, 3.68%)</title><rect x="95.5894%" y="309" width="3.6788%" height="15" fill="rgb(219,65,33)" fg:x="4833" fg:w="186"/><text x="95.8394%" y="319.50">allo..</text></g><g><title>core::ptr::write (186 samples, 3.68%)</title><rect x="95.5894%" y="293" width="3.6788%" height="15" fill="rgb(243,134,7)" fg:x="4833" fg:w="186"/><text x="95.8394%" y="303.50">core..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="99.2682%" y="629" width="0.0396%" height="15" fill="rgb(216,177,54)" fg:x="5019" fg:w="2"/><text x="99.5182%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="99.2880%" y="613" width="0.0198%" height="15" fill="rgb(211,160,20)" fg:x="5020" fg:w="1"/><text x="99.5380%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="99.2880%" y="597" width="0.0198%" height="15" fill="rgb(239,85,39)" fg:x="5020" fg:w="1"/><text x="99.5380%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="99.2880%" y="581" width="0.0198%" height="15" fill="rgb(232,125,22)" fg:x="5020" fg:w="1"/><text x="99.5380%" y="591.50"></text></g><g><title>chess::move_gen::direction_sliding (8 samples, 0.16%)</title><rect x="99.3078%" y="629" width="0.1582%" height="15" fill="rgb(244,57,34)" fg:x="5021" fg:w="8"/><text x="99.5578%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.10%)</title><rect x="99.3671%" y="613" width="0.0989%" height="15" fill="rgb(214,203,32)" fg:x="5024" fg:w="5"/><text x="99.6171%" y="623.50"></text></g><g><title>chess::piece::PieceList::add (1 samples, 0.02%)</title><rect x="99.4660%" y="629" width="0.0198%" height="15" fill="rgb(207,58,43)" fg:x="5029" fg:w="1"/><text x="99.7160%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;i8&gt;&gt; (1 samples, 0.02%)</title><rect x="99.4660%" y="613" width="0.0198%" height="15" fill="rgb(215,193,15)" fg:x="5029" fg:w="1"/><text x="99.7160%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.4660%" y="597" width="0.0198%" height="15" fill="rgb(232,15,44)" fg:x="5029" fg:w="1"/><text x="99.7160%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;i8,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="99.4660%" y="581" width="0.0198%" height="15" fill="rgb(212,3,48)" fg:x="5029" fg:w="1"/><text x="99.7160%" y="591.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.4660%" y="565" width="0.0198%" height="15" fill="rgb(218,128,7)" fg:x="5029" fg:w="1"/><text x="99.7160%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i8&gt;&gt; (1 samples, 0.02%)</title><rect x="99.4660%" y="549" width="0.0198%" height="15" fill="rgb(226,216,39)" fg:x="5029" fg:w="1"/><text x="99.7160%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.4660%" y="533" width="0.0198%" height="15" fill="rgb(243,47,51)" fg:x="5029" fg:w="1"/><text x="99.7160%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="99.4660%" y="517" width="0.0198%" height="15" fill="rgb(241,183,40)" fg:x="5029" fg:w="1"/><text x="99.7160%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="99.4660%" y="501" width="0.0198%" height="15" fill="rgb(231,217,32)" fg:x="5029" fg:w="1"/><text x="99.7160%" y="511.50"></text></g><g><title>chess::piece::PieceList::make_move (1 samples, 0.02%)</title><rect x="99.4858%" y="629" width="0.0198%" height="15" fill="rgb(229,61,38)" fg:x="5030" fg:w="1"/><text x="99.7358%" y="639.50"></text></g><g><title>free (1 samples, 0.02%)</title><rect x="99.5055%" y="629" width="0.0198%" height="15" fill="rgb(225,210,5)" fg:x="5031" fg:w="1"/><text x="99.7555%" y="639.50"></text></g><g><title>malloc (9 samples, 0.18%)</title><rect x="99.5253%" y="629" width="0.1780%" height="15" fill="rgb(231,79,45)" fg:x="5032" fg:w="9"/><text x="99.7753%" y="639.50"></text></g><g><title>all (5,056 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(224,100,7)" fg:x="0" fg:w="5056"/><text x="0.2500%" y="671.50"></text></g><g><title>prueba (5,056 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(241,198,18)" fg:x="0" fg:w="5056"/><text x="0.2500%" y="655.50">prueba</text></g><g><title>realloc (15 samples, 0.30%)</title><rect x="99.7033%" y="629" width="0.2967%" height="15" fill="rgb(252,97,53)" fg:x="5041" fg:w="15"/><text x="99.9533%" y="639.50"></text></g></svg></svg>